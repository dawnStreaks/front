{"version":3,"sources":["webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/dictionary/basic-shapes.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/container-interaction.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/image-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/canvas-renderer.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/svg-renderer.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/rendering/renderer.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/page-settings.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/service.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/grid-lines.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/ruler-settings.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/data-mapping.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/data-source.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/layout/layout-base.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/actions.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/tool.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/connector-editing.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/event-handlers.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/layer.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/command-manager.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/scroller.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/spatial-search/quad.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/spatial-search/spatial-search.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/serialization-settings.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/custom-cursor.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/dictionary/umlactivity-shapes.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/diagram-util.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/layers.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/customcursor.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/connector-annotation.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/connectors.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/node-annotation.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/ports.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/nodes.directive.js","webpack:///./node_modules/@syncfusion/ej2-vue-diagrams/src/diagram/diagram.component.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/layout/hierarchical-tree.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/containers/grid.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/connector.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/diagram-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/ruler/ruler.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/ruler/ruler.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/path-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/annotation.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/port.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/containers/canvas.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/html-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/icon.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/node-base.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/native-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/containers/container.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/constraints-util.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/base-util.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/interaction/selector.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/dictionary/common.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/containers/stack-panel.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/uml-util.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/node.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/appearance.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/matrix.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/size.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/swim-lane-util.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/enum/enum.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/point.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/data-binding/data-binding.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/diagram/keyboard-commands.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/dom-util.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/primitives/rect.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/core/elements/text-element.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/utility/path-util.js","webpack:///./node_modules/@syncfusion/ej2-popups/src/common/position.js","webpack:///./node_modules/@syncfusion/ej2-popups/src/common/collision.js","webpack:///./node_modules/@syncfusion/ej2-popups/src/popup/popup.js","webpack:///./node_modules/@syncfusion/ej2-popups/src/tooltip/tooltip.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/tooltip.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/connector.js","webpack:///./node_modules/@syncfusion/ej2-diagrams/src/diagram/objects/dictionary/flow-shapes.js"],"names":["getBasicShape","shape","basicShapes","toString","updateCanvasBounds","diagram","obj","position","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","wrapper","type","bounds","x","right","y","bottom","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","actualSize","width","outerBounds","undefined","rowIndex","columns","length","updateColumnWidth","columnIndex","orientation","phaseSize","drag","scale","height","updateRowHeight","select","removeChildInContainer","isProtectedOnChange","propertyChangeValue","undoObj","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rect","rows","children","i","uniteRect","cells","createHelper","newObj","cloneObject","_i","_a","Object","keys","prop","id","initObject","updateDiagramObject","renderContainerHelper","object","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","constraints","LineRouting","node","rotateAngle","offsetX","offsetY","minWidth","minHeight","maxWidth","maxHeight","style","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","margin","left","top","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","substring","lanes","lane","j","splice","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","child","indexOf","swimLaneBounds","parentBounds","laneHeaderId","top_1","removeElements","addChild","currentParentId","parentObj","push","diagramActions","UndoRedo","swimLane","isUpdateRow","isGroupAction","padding","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","updateDiagramElementQuad","renderStackHighlighter","element","isVertical","isUml","isSwimlane","adornerSvg","diagramRenderer","scroller","transform","moveChildInStack","sourceNode","target","action","sourceParent","value","targetIndex","sourceIndex","undoElement","source","redoElement","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","ImageElement","_super","_this","call","imageSource","imageScale","imageAlign","stretch","defineProperty","get","set","isDirt","enumerable","configurable","availableSize","callback","contentSize","validateDesiredSize","updateBounds","CanvasRenderer","getContext","canvas","setCanvasSize","setAttribute","renderGradient","options","ctx","max","min","grd","gradient","stops","offset","Math","linear","createLinearGradient","x1","y1","x2","y2","radial","createRadialGradient","fx","fy","cx","cy","r","stop_1","addColorStop","color","fillStyle","renderShadow","collection","save","beginPath","strokeStyle","shadow","globalAlpha","opacity","ptModel","point","angle","distance","transX","transY","pivotX","pivotY","rotateContext","translate","renderPath","fillRect","stroke","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","dashArray","parseDashArray","setLineDash","rotate","PI","setFontStyle","text","font","italic","bold","fontFamily","dashes","separator","splittedDashes","split","splittedDashes_1","Number","drawRectangle","visible","cornerRadius","data","drawPath","flip","length_1","x0","y0","segs","seg","char","command","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","r1","ry","r2","xAxisRotation","largeArc","sweep","cp","currp","cos","sin","l","pow","sqrt","k","s","isNaN","cpp","centp","a1","a","u","v","ad","dir","ah","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","diagramId","scaleValue","content","fontSize","childNodes","wrapBounds","labelAlign","dy","textOverflow","textWrapping","fillText","temp","concat","textDecoration","startPointX","startPointY","textlength","measureText","endPointX","endPointY","loadImage","image","Image","src","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","toLowerCase","substr","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","ctx1","srcRatio","destRatio","getMeetOffset","scaleX","scaleY","arg","res","dest","m","acos","labelX","labelY","offsetx","offsety","pointx","pointy","textAlign","SvgRenderer","shadowElement","pointModel","tX","tY","getElementById","document","createElementNS","appendChild","attr","svgContainer","insertBefore","firstChild","svg","onlyRect","isSelector","removeChild","class","poiterEvents","setSvgStyle","updateSelectionRegion","gElement","createGElement","elementType","attribute","drawLine","line","startPoint","endPoint","drawCircle","enableSelector","circle","classval","centerX","centerY","radius","display","floor","random","path","segments","segment","setSvgFontStyle","fontStyle","fontWeight","textNode","tspanElement","doWrap","whiteSpace","setAttributeNS","innerHtmlTextElement","innerHTML","createTextNode","svgLabelAlign","setText","imgAlign","aspectRatio","charAt","drawHTMLContent","indexValue","htmlElement","parentHtmlElement","parentElement","querySelector","nodeId","attr_1","template","cloneNode","topLeft","parentTransform","drawNativeContent","nativeElement","clipPath","setNativTransform","drawClipPath","description","contentWidth","contentHeight","templatePosition","pivot","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","canApplyStyle","canvasRenderer","wrapBound","pos","pointX","pointY","DiagramRenderer","name","svgRender","isSvgMode","renderer","svgRenderer","setCursor","cursor","setLayers","iconSvgLayer","getElementsByClassName","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getAdornerLayer","adornerLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","g","nativeSvg","renderElement","htmlLayer","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","w","h","t","tx","ty","renderHighlighter","newPathString","arrayCollection","umlData","renderResizeHandle","currentZoom","selectorConstraints","canMask","enableNode","nodeConstraints","Rotate","rendererActions","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","ResizeNorthWest","renderCircularHandle","ResizeNorthEast","ResizeSouthWest","ResizeSouthEast","ResizeNorth","ResizeSouth","ResizeWest","ResizeEast","renderEndPointHandle","selector","connectedSource","connectedTarget","isSegmentEditing","sourcePoint","targetPoint","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","isEmptyPoint","point1","bezierPoint1","renderBezierLine","points","point2","bezierPoint2","visibility","distancePoints","toFixed","allowDrag","renderOrthogonalThumb","getBaseAttributes","start","end","connected","count","className","newPoint","matrix","isBorderTickness","DrawSelectorBorder","renderUserHandler","selectorItem","userHandles","UserHandle","pathData","option","backgroundColor","borderColor","borderWidth","pathPading","pathSize","newData","pathColor","handleContent","horizontalAlignment","verticalAlignment","setOffsetWithRespectToBounds","relativeMode","element_1","sourceWidth","sourceHeight","absolutePath","flipOffset","isExport","pathBounds","absoluteBounds","renderSvgGridlines","snapSettings","gridSvg","rulerSettings","hRuler","vRuler","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","showRulers","dynamicGrid","updateSegmentWidth","horizontalGridlines","scaledIntervals","interval","verticalGridlines","lineIntervals","_b","_c","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","ruler","segmentWidth","newInterval","tickInterval","snapIntervals","gridlines","breakWord","exportScaleValue","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","abs","svgParent","hasNativeParent","svgNativeParent","hasChildren","svgParent_1","parentG","elementActions","ElementIsGroup","renderFlipElement","ElementIsPort","posX","posY","center","layer","drawRect","renderSvgBackGroundImage","background","diagramElement","backgroundLayer","bgimageLayer","align","transformLayers","svgMode","diagramLayer","gridLayer","portsLayer","expandLayer","updateNode","diagramElementsLayer","insertIndex","__decorate","decorators","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","Background","apply","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","All","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","findToolToActivate","touchStart","touchMove","eventHandler","tool","DrawOnce","drawingObject","hasSelection","handle","obj_1","paddedBounds","contains","selectorBnds","hasSingleConnection","annotation","conn_1","sourcePaddingValue","scrollSettings","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","thumbsConstraints","Inflate","containsPoint","checkResizeHandles","findPortToolToActivate","isSelected","match","hyperlink","link","hitPadding","checkResizeHandleForContainer","isPhase","checkForResizeHandles","conn","connectorEditingToolModule","segPoint","Hover","Visible","Drag","Draw","connector","sourcePortID","currentDrawingObject","forty","mousePosition","corner","firstLevel","getCursor","cursors","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","checkProperty","undoParentElement","startAction","mouseDown","args","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","diff","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","equals","toBounds","clearSelectedItems","region","doRubberBandSelection","arrayNodes","getSelectedObject","info","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","sourceWrapper","ConnectTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","sourceID","targetID","oldValues","targetPortName","targetNodeNode","findTarget","targetWrapper","state","targetNode","oldValue","newValue","cancel","targetPort","trigger","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","diffX","diffY","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","isConnect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","round","None","MoveTool","objType","currentTarget","objectType","getSubProcess","portId","initialOffset","isPreventHistory","historyAdded","newValues","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","processId","entry_1","snapPoint","removeHighlighter","isDroppable","drop","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","oldValues_1","dragOverElement","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","object_1","drawHighlighter","portDrag","RotateTool","objects","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","refPoint","findAngle","snapAngle","arg1","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","sourceObject","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","ConnectorDrawingTool","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difX","difY","scroll","touch1","touch2","pageX","pageY","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","win","window","open","focus","PolygonDrawingTool","pt","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","annotationId","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","textElement","trans","pivotPoint","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","index","dragControlPoint","shiftKey","addOrRemoveSegment","prev","next","updateLastSegment","removePrevSegment","len","removeNextSegment","updateEndPoint","first","removeSegments","segmentCollectionChange","last","direction","findSegmentDirection","updateSeg","previous","findIndex","newseg","intersectingSegs","segmentPoint","update","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","coll","segmentDirection","segValues","insertseg","nextseg","current","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","removeSegment","pop","sec","lastseg","args1","updatePortSegment","corners","middleLeft","middleRight","bottomCenter","topCenter","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","targetPortID","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","line1","line2","destroy","getModuleName","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","diagramCanvas","classList","add","remove","TextEdit","ToolAction","getMousePosition","e","touchArg","changedTouches","clientX","clientY","boundingRect","getBoundingClientRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","setTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","bound","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","topRight","bottomLeft","bottomRight","offsetHeight","offsetWidth","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","delay","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","touches","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","Connect","checkAction","isSwimlaneElements","force","touchMoveList","content_1","getContent","tooltip","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","isPrivateTooltip","Tooltip","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","delay_1","doAutoScroll","onUserHandleMouseUp","mode","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","portVisibility","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","laneNode","header","hasHeader","phases","addPhases","orientation_1","addLanes","swimLaneobj","up","wheelDelta","tooltipObject","close","horizontalOffset","verticalOffset","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","commandManager","commands","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","canExecute","KeyboardEvent","parameter","selectedSymbols","intDestroy","removeFromAQuad","removeObjectsFromLayer","droppable","draggable","addConstraints","PreventClearSelection","execute","commandExecute","movingPosition","rulerSize","autoScrollBorder","viewPortWidth","viewPortHeight","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","dataBind","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","annotations","getWrapper","isAddTextNode","focusOut","bpmnModule","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","measureChildren","childNode","innerNode","highlighter","Default","HideThumbs","Resize","zIndex","umlIndex","updateConnectorEdges","ObjectFinder","actions","layerTarger","objArray","spatialSearch","findObjects","layerObjTable","objArray_1","pointInBounds","_d","layers","_e","actualTarget_1","portElement","ports","port","isTarget","eventArg","findTargetElement","selected","Layer","propName","defaultValue","isArray","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","animation","duration","openDelay","closeDelay","setTooltipTemplate","HTMLElement","tooltipOffset","ToolTip","event","connectionChange","dragOverArg","dragOver","selectorModel","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","activity","subProcess","transaction","success","failure","nodeEnd","portEnd","clonedNode","getAnnotation","annotationNode","intermediatePoints","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","objIndex","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","targerNodes","setActiveLayer","objects_1","layer_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","clonedObject","newOffset","connectorsList","laneIndex","selectedItems_1","item","sortByZIndex","processes","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","inEdges","edges_1","edge","newConnector","outEdges","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","node_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","cause","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","convert","init","getObjectCollectionId","oldItemsCollection","ejsInterop","oldItems","items","newItems","updateDiagramCollection","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","sort","reverse","views","lastChildNode","lastChild","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","currentLayer","intersects","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","symbolDrag","node_2","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","firstSegment","secondSegment","cornerPoints","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","pathElement","anglePoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","vector1","vector2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","newProp","protect","innerParents","sw","sh","refObject","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","containsRect","newPosition","oldleft","oldtop","parent_3","parent_4","scaleConnector","changedvalues","getPortChanges","label","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","getLengthFromListOfPoints","dragLimit","minDistance","getRelativeOffset","connectorOffset","findLength","updateLabelMargin","dragLimitValue","tempPt","contentDimension","getPointAtLength","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","boundsInterSects","lineIntersects_1","ptt","cursorLimit","polyLine","self","polyLine2","intersect","polyLine1","pre","run","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","lineUtil1","lineUtil2","line3","enabled","intersectPt","labelWrapper","segmentAngle","getPointloop","newMat","pageSettings","selectorBounds","top_2","PreventZIndexOnDragging","isExpanded","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","layout","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","canMeasurePath","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","collapsed","connectHighlighter","tgt","tgtWrap","parent_6","towardsLeft","towardsTop","SnapToObject","removeGuidelines","hasTarget","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","middle","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hOffset","vOffset","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","ceil","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","view","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","MAX_VALUE","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","Diagram","version","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","diagramid","renderTimer","nodeDefaults","connectorDefaults","defaultConnector","clearCollection","isConnector","clearObjects","onPropertyChanged","oldProp","isPropertyChanged","refreshLayout","refereshColelction","updateView","changedProp","excludeFromLayout","propertyChange","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","clear","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","refresh","contextMenuSettings","showCustomMenuOnly","show","_h","_j","serializationSettings","preventDefaults","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","horizontalRuler","verticalRuler","thickness","getPersistData","keyEntity","addOnPersist","preRender","initializePrivateVariables","serviceLocator","initializeServices","setCulture","measureElement","initDiagram","initViews","unWireEvents","wireEvents","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","isLoading","localeObj","locale","render","collapsedNode","dataSourceSettings","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","notify","isDevice","ZoomPan","SingleSelect","Render","updateTemplate","renderComplete","pathAnnotation","htmlNode","templateAnnotation","tempObj","onSuccess","dataManager","JSON","parse","dataSource","send","then","connectionDataSource","getClassName","requiredModules","modules","member","tooltipelement","usageCount","measureElementCount","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","negativeDirection","updated","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","changeType","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","reset","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","PreventCollectionChangeOnDragOver","collectionChange","status","updateElementVisibility","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","newObject","isAdding","processes_2","addAnnotation","spliceConnectorEdges","isSource","removeDependentConnector","currentObj","removeElement_1","elementId","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","swimLaneNode","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","laneHeader","attributes","bpmnAnnotation","getTextAnnotationWrapper","ReadOnly","addLabels","textArea","isEmpty","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","updateAnnotation","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","getPoints","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","currentEntry","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","initPorts","getDescription","initPortWrapper","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","initAnnotationWrapper","getAnnotationElement","removeLane","removePhase","phase","removelabelExtension","removePortsExtenion","real","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","measureElements","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","divElement","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","Virtualization","adapter","dataBindingModule","generateData","url","initSource","row","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","j_1","defaultLayer","initObjectExtend","getDefaults","getNodeDefaults","defaults","initNode","getConnectorDefaults","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","sourcePortWrapper","targetPortWrapper","getConnectorPoints","isWidth","PreventDrag","updateDefaultLayoutIcon","expandIcon","collapseIcon","icon","iconWrapper","isUpdateSize","node1","PreventScale","wrapperContent","initContainer","portContainer","childCollection","addObject","rowSpan","columnSpan","preventContainer","setNodeTemplate","initAnnotations","initIcons","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","X","Delete","A","Z","Y","Up","Right","Down","Left","F2","endEditCommand","Escape","Tab","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","viewId","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","basicElements","prevRotateAngle","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","canMeasure","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","getSegmentElement","clearRect","adornerSVG","removePageBreaks","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","PreventRenderSelector","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textContent","textEdit","updateTextAnnotationContent","deleteNode","phaseHeader","bridgeDirection","isAction","tempNode_1","updateObject","oldObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","Select","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","previousPhase","removeRow","removeColumn","rowDef","addRow","colDef","addColumn","id_1","headerNode","isLayout","existingBounds","updateConnector","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","changedObject","actualPort","updatePort","actualAnnotation","updateTooltip","updateTextAnnotationProp","checkSelectedItem","refreshTextElement","column","columnDefinitions","updateGroupSize","i_2","portWrapper","sizeChanged","innerFinalNode","outerFinalNode","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","targetPadding","sourcePadding","oldSource","sourceDecorator","targetDecorator","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","pts","updateNodeProperty","selItems","canUpdateSize","isMeasure","displacement","updateAnnotationContent","updateAnnotationWrapper","pathdata","String","iconContainer","iconRect","iconShape","nativeContent","showTipPointer","enable","nodeShadow","changedShadow","entryTable","over","dragData","isHorizontal","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","childtable","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","orientation_2","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","stringify","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","getUMLActivityShape","umlActivityShapes","completeRegion","selectedObjects","findNodeByName","findObjectType","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","shortestPoint","shortest","shortest1","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","tolerance","isDiagramChild","groupHasType","updateDefaultValues","actualNode","plainValue","property","oldKey","keyObj","createObject","getObjectType","updateLayoutValue","assitants","assistants","isPointOverConnector","intersectinPt","segment1","segment2","intersectDetails","intersect3","rect_1","l1","l2","na","nb","ua","ub","intersect2","start1","end1","start2","end2","getLineSegment","getTooltipOffset","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","offsetPoint","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignLabelOnSegments","ang","vAlign","hAlign","fourty5","one35","two25","three15","getBezierDirection","tar","removeChildNodes","getChild","subChild","getSwimLaneChildren","gridChild","removeUnnecessaryNodes","serialize","model","removeNodes","getCustomProperty","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","every","isSameArray","deserialize","map","doBinding","nodeTemp","arrangeTickHorizontal","arrangeTick","arrangeTickVertical","getLayoutInfo","getBranch","dataObj","upgrade","addInfo","cmd","component","updateStyle","updateGradient","changedGradient","targetGradient","updateHyperlink","labelStyle","updateShapeContent","updateShape","pathContent","imageContent","flowShapeElement","htmlContent","updateContent","shapes","flowshapedata","updateUmlActivityNode","basicShapeData","umlActivityShapeData","getUMLFinalNode","finalNodeShape","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","lastSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","side","canResizeCorner","canShowCorner","checkPortRestriction","findAnnotation","getInOutConnectPorts","isInConnect","InConnect","OutConnect","findObjectIndex","getObjectFromCollection","arrangeChild","insertObject","low","high","mid","getElement","instance","getPaletteSymbols","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","cloneBlazorObject","getDropEventArguements","getPoint","cornerPoint","flipConnector","updatePortEdges","portContent","alignElement","childX","childY","updatePathElement","pathseqData","findPath","Self","beginningpoint","findDistance","transferpt","startpoint","endpoint","checkBrowserInfo","LayersDirective","LayersPlugin","install","Vue","LayerDirective","LayerPlugin","CustomCursorsDirective","CustomCursorsPlugin","CustomCursorDirective","CustomCursorPlugin","ConnectorAnnotationsDirective","ConnectorAnnotationsPlugin","ConnectorAnnotationDirective","ConnectorAnnotationPlugin","ConnectorsDirective","ConnectorsPlugin","ConnectorDirective","ConnectorPlugin","NodeAnnotationsDirective","NodeAnnotationsPlugin","NodeAnnotationDirective","NodeAnnotationPlugin","PortsDirective","PortsPlugin","PortDirective","PortPlugin","NodesDirective","NodesPlugin","NodeDirective","NodePlugin","modelProps","DiagramComponent","propKeys","models","hasChildDirective","hasInjectedModules","tagMapper","tagNameMapper","ej2Instances","bindProperties","_setProperties","setProperties","muteOnChange","test","$emit","createElement","$slots","default","props","DiagramPlugin","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","rootNodes","setUpLayoutInfo","tree","hasSubTree","minX","maxY","maxX","minY","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","getBounds","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","prevBounds","shape1","childBounds","childWidth","childHeight","actBounds","translateSibilingsBy","oldActBounds","childInfo","canMoveValue","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","elementInfo","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","rect1","rect2","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","updateSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","targetBounds","startingPoint","getSegmentsFromPoints","point3","point_1","dx","differenceX","differenceY","GridPanel","cellStyle","desiredRowHeight","desiredCellWidth","rowDefinitions","rowDefns","colDefns","rowId","columnId","cell","GridCellItem","addObjectToCell","updateProperties","setDefinitions","rowDefn","GridRow","defaultCell","ColumnDefinition","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","updateRowIndex","currentIndex","newIndex","tempRow","updateColumnIndex","startRowIndex","tempSize","tempCol","desired","cellIndex","stretchChildren","isChange","cellX","cellWidth","cellHeight","z","removeCell","RowDefinition","findConnectorPoints","layoutOrientation","intermeditatePoints","getSourcePoint","terminateConnection","setLineEndPoint","srcPoint","srcPort","srcNode","getPortDirection","sPoint","tPoint","getIntersection","getDirection","tarPoint","srcCorner","tarCorner","srcDir","tarDir","sourceCorners","targetCorners","sourcePort","minSpace","sourceMargin","targetMargin","tarPortPt","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","orthoConnection3Segment","updateSegmentPoints","addLineSegment","pointToPoint","portdirection","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","source1","addPoints","portDir","pointToPort","seg_1","checkConsectiveSegmentAsSame","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","source_1","target_1","addPaddingToConnector","paddingPort","segmentPoints","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","createLineSegment","sPt","tPt","swapBounds","rectBounds","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","findIntermeditatePoints","findOrthoSegments","nodeOrPortToNode","length_2","length_3","lastPoint","nodeCorners","shortes","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","re","es","asin","cor","straight","segEnd","isTar","sPt1","tPt1","constValue","angle_2","angle_3","minimal","intersection","intersectSegment","dist","a2","b1","b2","c1","c2","r3","r4","denom","num","x3","y3","x4","y4","sameSign","One","Three","Five","sourceObj","targetObj","Two","Four","segLength","prevDir","orthoConnection4Segment","orthoConnection5Segment","allow","segmentValue","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","gap","preDir","closeEdge","boundsValue","one","two","three","four","getOuterBounds","DiagramElement","exportScaleOffset","Parent","isSvgRender","staticSize","isRectElement","isCalculateDesiredSize","unitMode","float","floatingBounds","getAbsolutePosition","Ruler","updateRulerGeometry","updateRuler","renderRulerSpace","rulerGeometry","getRulerGeometry","div","getRulerSize","getRulerSVG","Infinity","unitLength","unitOffset","rulerSegment","getNewSegment","updateSegment","segWidth","startValue","defStartValue","hRulerOffset","vRulerOffset","updateTickLabel","bBox","getBBox","isRightOrBottom","tickAlignment","createNewTicks","createTickLabel","tick","createTick","getLinePoint","linePoint","tickLength","scaleRound","five","multiples","fifty","log","createMarkerLine","rulerSvg","rulerObj","drawRulerMarker","currentPoint","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","renderOverlapElement","overlap","renderRuler","diagramRuler","appendTo","updateRulerDimension","removeRulerElements","clientWidth","clientHeight","removeRulerMarkers","marker","markers","drawRulerMarkers","updateRulerDiv","updateRulerSpace","marginLeft","marginTop","PathElement","transformPath","pointTimer","updatePath","isScale","Hyperlink","Annotation","InheritReadOnly","ShapeAnnotation","PathAnnotation","Port","PointPort","Canvas","desiredBounds","childSize","clone","canConsiderBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","findChildOffsetFromCenter","parentSize","DiagramHtmlElement","IconShape","NodeBase","DiagramNativeElement","getAvailableSize","Container","GetChildrenBounds","offsetPt","applyPadding","canSelect","canMove","canEnablePointerEvents","PointerEvents","canDelete","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","canShadow","Shadow","canInConnect","canPortInConnect","canOutConnect","canPortOutConnect","canResize","returnValue","canAllowDrop","AllowDrop","canVitualize","canEnableToolTip","canSingleSelect","canMultiSelect","MultipleSelect","canZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","enableReadOnly","enumValue","canDraw","canDrag","canPreventClearSelection","canDrawThumbs","avoidDrawSelector","randomId","chars","crypto","Uint16Array","intCrypto","msCrypto","getRandomValues","cornersPointsBeforeRotation","additionalProp","customProperties","propAdditional","getFunction","internalProp","getInternalProperties","isEventEmmitter","cloneArray","innerHtml","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","textAlignToString","wordBreakToString","bBoxText","middleElement","overFlow","whiteSpaceToString","wrap","rotateSize","rotatePoint","getOffset","offX","offY","getPortShape","portShapes","getDecoratorShape","decorator","decoratorShapes","getIconShape","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","parentBottom","parentRight","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","members","addSeparator","memberText","getStyle","isSeparator","attributeText","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","getShapeType","Shape","Path","Native","Html","Text","BasicShape","FlowShape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","BpmnSubProcess","BpmnActivity","BpmnAnnotation","BpmnShape","UmlActivityShape","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","UmlClassifierShape","Node","nodeDefault","isCanvasUpdate","textStyle","changedProperties","oldProperties","basicshape","basicshapedata","flowshape","umlactivityshape","initBPMNContent","children_1","accessibilityContent","contentAccessibility","getIconOffet","initIconSymbol","virtualize","annotationcontent","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","SwimLane","ChildContainer","Selector","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","ShapeStyle","StrokeStyle","TextStyle","MatrixTypes","Matrix","m11","m12","m21","m22","identityMatrix","Identity","transformPointByMatrix","multiplyPoint","transformPointsByMatrix","transformedPoints","points_1","rotateMatrix","multiplyMatrix","createRotationRadians","scaleMatrix","createScaling","translateMatrix","Translation","setMatrix","Unknown","result","Scaling","num2","matrix1","matrix2","type2","assignMatrix","m11New","m12New","m21New","m22New","mat","Size","initSwimLane","createRow","initGridRow","initGridColumns","headerDefine","phaseDefine","laneCollection","addObjectToGrid","isLaneOrientation","phaseIndex","rowValue","colValue","phaseObject","gridCell","childWrapper","phaseCount","createColumn","cols","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","swimLaneMeasureAndArrange","ChangeLaneIndex","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","updateHeaderMaxWidth","checkLaneChildrenOffset","checkPhaseOffset","checkLaneSize","findStartLaneIndex","phaseRow","gridRowIndex","updateConnectorsProperties","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","findPhaseIndex","updatePhaseMaxWidth","addLane","addChildNodeToNewLane","addPhase","newPhase","phaseNode","nextPhase","laneHeaderSize","phasesCollection","nextCol","addPhase_1","nextRow","addPhase_2","isLastPhase","addLastPhase","phaseObj","fristRow","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","nextCell","prevCell","addSwimlanePhases","prevRow","arrangeChildInGrid","changeCell","swimLaneSelection","pasteSwimLane","cloneLane","ranId","nodeX","nodeY","newShape","i_3","gridSelection","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","isChildNode","preventHistory","lanenode","getGridChildren","removeSwimLane","removeChildren","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","prevWidth","prevChild","phaseRowIndex","prevHeight","considerSwimLanePadding","PortVisibility","SnapConstraints","SelectorConstraints","ConnectorConstraints","AnnotationConstraints","NodeConstraints","ElementAction","ThumbsConstraints","DiagramConstraints","DiagramTools","Transform","RenderMode","KeyModifiers","Keys","DiagramAction","RendererAction","RealAction","NoOfSegments","DiagramEvent","PortConstraints","Point","atan2","pt1","pt2","adjustPoint","isStart","DataBinding","dataTable","dataProp","jsonProp","json","applyDataSource","mapper","query","defaultQuery","executeQuery","firstNode","nextLevel","updateMultipleRootNodes","n","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","collectionContains","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","KeyGesture","Command","CommandManager","ContextMenuSettings","findSegmentPoints","sample","sampleLength","pathNode","getChildNode","pathLength","getTotalLength","nodeType","translatePoints","translatedPts","measurePath","svgBounds","getTextOptions","wrapSvgText","textValue","laneWidth","txtValue","bounds1","replace","wordWrapping","words","newText","existingWidth","existingText","eachLine","wrapSvgTextAlign","txtWidth","measureHtmlText","createHtmlElement","wordBreak","body","measureImage","imageElement","setAttributeHtml","loadedImage","measureNativeContent","nativeSVG","measureNativeSvg","initX","initY","getDiagramLayerSvg","diagramLayerSvg","elementcoll","getDiagramElement","contentId","CSS","escape","getDomIndex","childElement","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","getAdornerLayerSvg","adornerLayerSvg","getSelectorElement","diagramAdornerSvg","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","gridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","imageLayer","getBackgroundLayer","getGridLayer","diagramGridSvg","createSvgElement","setAttributeSvg","hasClass","eClassName","animVal","getScrollerWidth","outer","widthNoScroll","inner","widthWithScroll","addTouchPointer","touchList","pointerId","removeElement","isHtml","sentNode","blazor","compiledString","createMeasureElements","tSpan","setChildPosition","Rect","NaN","unitePoint","empty","MIN_VALUE","TextElement","textNodes","textWrapBounds","processPathData","parsePathData","ob","tokenizer","lastIndex","isExponential","exec","getRectanglePath","getPolygonPath","pathSegmentCollection","ctrl","cpt2","newSeg","arr","sX","sY","bX","bY","iX","iY","scalePathData","scaledPath","updatedSegment","getPathString","val","scaleFactor","oldOffset","splitArrayCollection","getNewString","getString","string","popupRect","parentDocument","targetContainer","calculateRelativeBasedPosition","anchor","fixedElement","anchorPos","tempAnchor","offsetParent","offsetLeft","offsetTop","calculatePosition","positionX","positionY","targetValues","ownerDocument","setPosx","setPosy","getElementHCenter","getElementTop","getElementRight","getElementVCenter","getElementLeft","getElementBottom","getBodyScrollTop","documentElement","getBodyScrollLeft","fit","viewPortElement","axis","elemData","containerWidth","getTargetContainerWidth","getViewPortWidth","containerLeft","ContainerLeft","containerRight","ContainerRight","overLeft","overRight","containerHeight","getTargetContainerHeight","getViewPortHeight","containerTop","ContainerTop","containerBottom","ContainerBottom","overTop","overBottom","isCollide","elemOffset","elementRect","yAxis","topCollideCheck","xAxis","leftCollideCheck","topSide","rightSide","leftSide","bottomSide","fixedParent","tEdge","TL","TR","BL","BR","eEdge","updateElementData","setPosition","leftFlip","topFlip","setPopup","getComputedStyle","eStatus","deepCheck","collideSide","getTargetContainerLeft","getTargetContainerTop","innerHeight","windowWidth","innerWidth","PositionData","CLASSNAMES","ROOT","RTL","OPEN","CLOSE","Popup","setEnableRtl","refreshPosition","parseInt","setContent","actionOnScroll","wireScrollEvents","unwireScrollEvents","unwireEvents","styles","orientationOnChange","getRelateToElement","getScrollableParent","scrollRefresh","relateToElement","relateTo","tagName","hide","targetVisible","isElementOnViewport","targetInvisibleStatus","scrollElement","scrollParents","isElementVisible","checkGetBoundingClientRect","windowView","outerWidth","outerHeight","off","elementView","reposition","enableRtl","collision","checkFixedParent","checkCollision","parentDisplay","getAnchorPosition","eleRect","error","anchorEle","anchorRect","targetType","callFlip","param","callFit","viewPortRect","horz","vert","animationOptions","relativeElement","zIndexElement","getZindexPartial","showAnimation","begin","animate","hideAnimation","parentStyle","eleStyle","overflowRegex","overflowY","overflowX","parentZindex","defaultView","getPropertyValue","childrenZindex","isEqualNode","siblingsZindex","finalValue","currentZindexValue","TOUCHEND_HIDE_DELAY","TAPHOLD_THRESHOLD","SHOW_POINTER_TIP_GAP","HIDE_POINTER_TIP_GAP","MOUSE_TRAIL_GAP","POINTER_ADJUST","DEVICE","ICON","TOOLTIP_WRAP","CONTENT","ARROW_TIP","ARROW_TIP_OUTER","ARROW_TIP_INNER","TIP_BOTTOM","TIP_TOP","TIP_LEFT","TIP_RIGHT","POPUP_ROOT","POPUP_OPEN","POPUP_CLOSE","POPUP_LIB","Animation","effect","initialize","formatPosition","tooltipPositionY","tooltipPositionX","renderArrow","setTipClass","tip","tipClass","tooltipEle","renderPopup","elePos","mouseTrail","getTooltipPosition","popupObj","openPopupHandler","closePopupHandler","offsetPos","calculateTooltipOffset","collisionFlipFit","needTemplateReposition","tooltipEventArgs","tooltipEleWidth","tooltipEleHeight","arrowEle","tipWidth","tipHeight","tipAdjust","tipHeightAdjust","tipWidthAdjust","updateTipPosition","selEle","querySelectorAll","removeList","adjustArrow","leftValue","topValue","tooltipWidth","tooltipHeight","arrowInnerELe","tipPosExclude","tipPointerPosition","renderContent","tooltipContent","removeAttribute","templateFunction","isBlazorTemplate","renderCloseIcon","isSticky","tipClose","onStickyClose","addDescribedBy","describedby","join","trim","removeDescribedBy","orgdescribedby","tapHoldHandler","autoCloseTimer","targetHover","originalEvent","touchEndHandler","targetClick","targetList","ctrlId","targetList_1","restoreElement","showTimer","hideTimer","observeCallback","beforeRenderArgs","beforeRenderCallback","isHidden","attrs","role","cssClass","stop","observedArgs","beforeOpenCallback","openAnimation_1","timingFunction","wireMouseEvents","viewContainerRef","horizontal","vertical","affectedPos","newpos","collidedPosition","eleOffset","arrowleft","closeAnimation_1","unwireMouseEvents","onMouseOut","enteredElement","relatedTarget","checkForTooltipElement","tooltipElementMouseOut","onMouseMove","eventPageX","eventPageY","colpos","touchEnd","scrollHandler","opensOn","triggerList","getTriggerList","triggerList_1","wireFocusEvents","touchModule","tapHoldThreshold","tapHold","targetList_2","triggerList_2","unwireFocusEvents","targetList_3","triggerList_3","DiagramTooltip","initTooltip","tooltipOption","updateTooltipContent","beforeCollision","beforeOpen","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","StraightSegment","BezierSegment","OrthogonalSegment","Decorator","Vector","ConnectorSegment","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","controlPoint1","controlPoint2","minx","miny","maxx","maxy","tolerancevalue","bezierPoints","MultiplicityLabel","ClassifierMultiplicity","Connector","bridges","bpmnElement","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","accessContent","getDecoratorElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","textele","canRefresh","horizor","verzor","newPoints","clipDecorator","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","bridge","rendered","segmentPointIndex","getPath","getPt","st","j_2","j_3","segmentOffset","connWidth","connHeight","getFlowShape","flowShapes"],"mappings":"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","file":"js/chunk-0eb55f7f.16603e62.js","sourcesContent":["/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.PreventZIndexOnDragging;\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventZIndexOnDragging;\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'chart_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if (navigator.platform.indexOf('Mac') && Browser.info.name === 'Safari') {\n        return true;\n    }\n    return false;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar LayersDirective = /** @class */ (function (_super) {\n    __extends(LayersDirective, _super);\n    function LayersDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LayersDirective.prototype.render = function () {\n        return;\n    };\n    LayersDirective = __decorate([\n        EJComponentDecorator({})\n    ], LayersDirective);\n    return LayersDirective;\n}(Vue));\nexport { LayersDirective };\nexport var LayersPlugin = {\n    name: 'e-layers',\n    install: function (Vue) {\n        Vue.component(LayersPlugin.name, LayersDirective);\n    }\n};\n/**\n * `e-layers` directive represent a layers of the vue diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```vue\n * <ejs-diagram>\n * <e-layers>\n * <e-layer>\n * </e-layers>\n * </e-layers>\n</ejs-diagram>\n * ```\n */\nvar LayerDirective = /** @class */ (function (_super) {\n    __extends(LayerDirective, _super);\n    function LayerDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LayerDirective.prototype.render = function () {\n        return;\n    };\n    LayerDirective = __decorate([\n        EJComponentDecorator({})\n    ], LayerDirective);\n    return LayerDirective;\n}(Vue));\nexport { LayerDirective };\nexport var LayerPlugin = {\n    name: 'e-layer',\n    install: function (Vue) {\n        Vue.component(LayerPlugin.name, LayerDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar CustomCursorsDirective = /** @class */ (function (_super) {\n    __extends(CustomCursorsDirective, _super);\n    function CustomCursorsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomCursorsDirective.prototype.render = function () {\n        return;\n    };\n    CustomCursorsDirective = __decorate([\n        EJComponentDecorator({})\n    ], CustomCursorsDirective);\n    return CustomCursorsDirective;\n}(Vue));\nexport { CustomCursorsDirective };\nexport var CustomCursorsPlugin = {\n    name: 'e-cursormaps',\n    install: function (Vue) {\n        Vue.component(CustomCursorsPlugin.name, CustomCursorsDirective);\n    }\n};\n/**\n * `e-custormaps` directive represent a layers of the vue diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```vue\n * <ejs-diagram>\n * <e-custormaps>\n * <e-custormap>\n * </e-custormap>\n * </e-custormaps>\n</ejs-diagram>\n * ```\n */\nvar CustomCursorDirective = /** @class */ (function (_super) {\n    __extends(CustomCursorDirective, _super);\n    function CustomCursorDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CustomCursorDirective.prototype.render = function () {\n        return;\n    };\n    CustomCursorDirective = __decorate([\n        EJComponentDecorator({})\n    ], CustomCursorDirective);\n    return CustomCursorDirective;\n}(Vue));\nexport { CustomCursorDirective };\nexport var CustomCursorPlugin = {\n    name: 'e-cursormap',\n    install: function (Vue) {\n        Vue.component(CustomCursorPlugin.name, CustomCursorDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar ConnectorAnnotationsDirective = /** @class */ (function (_super) {\n    __extends(ConnectorAnnotationsDirective, _super);\n    function ConnectorAnnotationsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConnectorAnnotationsDirective.prototype.render = function () {\n        return;\n    };\n    ConnectorAnnotationsDirective = __decorate([\n        EJComponentDecorator({})\n    ], ConnectorAnnotationsDirective);\n    return ConnectorAnnotationsDirective;\n}(Vue));\nexport { ConnectorAnnotationsDirective };\nexport var ConnectorAnnotationsPlugin = {\n    name: 'e-connector-annotations',\n    install: function (Vue) {\n        Vue.component(ConnectorAnnotationsPlugin.name, ConnectorAnnotationsDirective);\n    }\n};\n/**\n * `e-connector-annotation` directive represent a annotation of the vue Diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```html\n * <ejs-diagram>\n * <e-connectors>\n * <e-connector>\n * <e-connector-annotations>\n * <e-connector-annotation>\n * </e-connector-annotation>\n * </e-connector-annotations>\n * </e-connector>\n * </e-connectors>\n * </ejs-diagram>\n * ```\n */\nvar ConnectorAnnotationDirective = /** @class */ (function (_super) {\n    __extends(ConnectorAnnotationDirective, _super);\n    function ConnectorAnnotationDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConnectorAnnotationDirective.prototype.render = function () {\n        return;\n    };\n    ConnectorAnnotationDirective = __decorate([\n        EJComponentDecorator({})\n    ], ConnectorAnnotationDirective);\n    return ConnectorAnnotationDirective;\n}(Vue));\nexport { ConnectorAnnotationDirective };\nexport var ConnectorAnnotationPlugin = {\n    name: 'e-connector-annotation',\n    install: function (Vue) {\n        Vue.component(ConnectorAnnotationPlugin.name, ConnectorAnnotationDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar ConnectorsDirective = /** @class */ (function (_super) {\n    __extends(ConnectorsDirective, _super);\n    function ConnectorsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConnectorsDirective.prototype.render = function () {\n        return;\n    };\n    ConnectorsDirective = __decorate([\n        EJComponentDecorator({})\n    ], ConnectorsDirective);\n    return ConnectorsDirective;\n}(Vue));\nexport { ConnectorsDirective };\nexport var ConnectorsPlugin = {\n    name: 'e-connectors',\n    install: function (Vue) {\n        Vue.component(ConnectorsPlugin.name, ConnectorsDirective);\n    }\n};\n/**\n * `e-connectors` directive represent a connectors of the vue diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```html\n * <ejs-diagram>\n * <e-connectors>\n * <e-connector></e-connector>\n * </e-connectors>\n * </ejs-diagram>\n * ```\n */\nvar ConnectorDirective = /** @class */ (function (_super) {\n    __extends(ConnectorDirective, _super);\n    function ConnectorDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConnectorDirective.prototype.render = function () {\n        return;\n    };\n    ConnectorDirective = __decorate([\n        EJComponentDecorator({})\n    ], ConnectorDirective);\n    return ConnectorDirective;\n}(Vue));\nexport { ConnectorDirective };\nexport var ConnectorPlugin = {\n    name: 'e-connector',\n    install: function (Vue) {\n        Vue.component(ConnectorPlugin.name, ConnectorDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar NodeAnnotationsDirective = /** @class */ (function (_super) {\n    __extends(NodeAnnotationsDirective, _super);\n    function NodeAnnotationsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeAnnotationsDirective.prototype.render = function () {\n        return;\n    };\n    NodeAnnotationsDirective = __decorate([\n        EJComponentDecorator({})\n    ], NodeAnnotationsDirective);\n    return NodeAnnotationsDirective;\n}(Vue));\nexport { NodeAnnotationsDirective };\nexport var NodeAnnotationsPlugin = {\n    name: 'e-node-annotations',\n    install: function (Vue) {\n        Vue.component(NodeAnnotationsPlugin.name, NodeAnnotationsDirective);\n    }\n};\n/**\n * `e-node` directive represent a annotation of the vue Diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```html\n * <ejs-diagram>\n * <e-nodes>\n * <e-node>\n * <e-node-annotations>\n * <e-node-annotation>\n * </e-node-annotation>\n * </e-node-annotations>\n * </e-node>\n * </e-nodes>\n * </ejs-diagram>\n * ```\n */\nvar NodeAnnotationDirective = /** @class */ (function (_super) {\n    __extends(NodeAnnotationDirective, _super);\n    function NodeAnnotationDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeAnnotationDirective.prototype.render = function () {\n        return;\n    };\n    NodeAnnotationDirective = __decorate([\n        EJComponentDecorator({})\n    ], NodeAnnotationDirective);\n    return NodeAnnotationDirective;\n}(Vue));\nexport { NodeAnnotationDirective };\nexport var NodeAnnotationPlugin = {\n    name: 'e-node-annotation',\n    install: function (Vue) {\n        Vue.component(NodeAnnotationPlugin.name, NodeAnnotationDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar PortsDirective = /** @class */ (function (_super) {\n    __extends(PortsDirective, _super);\n    function PortsDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PortsDirective.prototype.render = function () {\n        return;\n    };\n    PortsDirective = __decorate([\n        EJComponentDecorator({})\n    ], PortsDirective);\n    return PortsDirective;\n}(Vue));\nexport { PortsDirective };\nexport var PortsPlugin = {\n    name: 'e-node-ports',\n    install: function (Vue) {\n        Vue.component(PortsPlugin.name, PortsDirective);\n    }\n};\n/**\n * `e-port` directive represent a port of the vue Diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```html\n * <ejs-diagram>\n * <e-nodes>\n * <e-node>\n * <e-node-ports>\n * <e-node-port>\n * </e-node-port>\n * </e-node-ports>\n * </e-node>\n * </e-nodes>\n * </ejs-diagram>\n * ```\n */\nvar PortDirective = /** @class */ (function (_super) {\n    __extends(PortDirective, _super);\n    function PortDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PortDirective.prototype.render = function () {\n        return;\n    };\n    PortDirective = __decorate([\n        EJComponentDecorator({})\n    ], PortDirective);\n    return PortDirective;\n}(Vue));\nexport { PortDirective };\nexport var PortPlugin = {\n    name: 'e-node-port',\n    install: function (Vue) {\n        Vue.component(PortPlugin.name, PortDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport Vue from 'vue';\nimport { EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nvar NodesDirective = /** @class */ (function (_super) {\n    __extends(NodesDirective, _super);\n    function NodesDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodesDirective.prototype.render = function () {\n        return;\n    };\n    NodesDirective = __decorate([\n        EJComponentDecorator({})\n    ], NodesDirective);\n    return NodesDirective;\n}(Vue));\nexport { NodesDirective };\nexport var NodesPlugin = {\n    name: 'e-nodes',\n    install: function (Vue) {\n        Vue.component(NodesPlugin.name, NodesDirective);\n    }\n};\n/**\n * `e-node` directive represent a nodes of the vue diagram.\n * It must be contained in a Diagram component(`ejs-diagram`).\n * ```html\n * <ejs-diagram>\n * <e-nodes>\n * <e-node></e-node>\n * </e-nodes>\n * </ejs-diagram>\n * ```\n */\nvar NodeDirective = /** @class */ (function (_super) {\n    __extends(NodeDirective, _super);\n    function NodeDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeDirective.prototype.render = function () {\n        return;\n    };\n    NodeDirective = __decorate([\n        EJComponentDecorator({})\n    ], NodeDirective);\n    return NodeDirective;\n}(Vue));\nexport { NodeDirective };\nexport var NodePlugin = {\n    name: 'e-node',\n    install: function (Vue) {\n        Vue.component(NodePlugin.name, NodeDirective);\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ComponentBase, EJComponentDecorator } from '@syncfusion/ej2-vue-base';\nimport { Diagram } from '@syncfusion/ej2-diagrams';\nimport { LayersDirective, LayerDirective, LayersPlugin, LayerPlugin } from './layers.directive';\nimport { CustomCursorsDirective, CustomCursorDirective, CustomCursorsPlugin, CustomCursorPlugin } from './customcursor.directive';\nimport { ConnectorAnnotationsDirective, ConnectorAnnotationDirective, ConnectorAnnotationsPlugin, ConnectorAnnotationPlugin } from './connector-annotation.directive';\nimport { ConnectorsDirective, ConnectorDirective, ConnectorsPlugin, ConnectorPlugin } from './connectors.directive';\nimport { NodeAnnotationsDirective, NodeAnnotationDirective, NodeAnnotationsPlugin, NodeAnnotationPlugin } from './node-annotation.directive';\nimport { PortsDirective, PortDirective, PortsPlugin, PortPlugin } from './ports.directive';\nimport { NodesDirective, NodeDirective, NodesPlugin, NodePlugin } from './nodes.directive';\nexport var properties = ['addInfo', 'backgroundColor', 'bridgeDirection', 'commandManager', 'connectorDefaults', 'connectors', 'constraints', 'contextMenuSettings', 'customCursor', 'dataSourceSettings', 'drawingObject', 'enablePersistence', 'enableRtl', 'getConnectorDefaults', 'getCustomCursor', 'getCustomProperty', 'getCustomTool', 'getDescription', 'getNodeDefaults', 'height', 'historyManager', 'layers', 'layout', 'locale', 'mode', 'nodeDefaults', 'nodes', 'pageSettings', 'rulerSettings', 'scrollSettings', 'selectedItems', 'serializationSettings', 'setNodeTemplate', 'snapSettings', 'tool', 'tooltip', 'updateSelection', 'width', 'animationComplete', 'click', 'collectionChange', 'commandExecute', 'connectionChange', 'contextMenuBeforeItemRender', 'contextMenuClick', 'contextMenuOpen', 'created', 'dataLoaded', 'doubleClick', 'dragEnter', 'dragLeave', 'dragOver', 'drop', 'expandStateChange', 'historyChange', 'historyStateChange', 'mouseEnter', 'mouseLeave', 'mouseOver', 'onImageLoad', 'onUserHandleMouseDown', 'onUserHandleMouseEnter', 'onUserHandleMouseLeave', 'onUserHandleMouseUp', 'positionChange', 'propertyChange', 'rotateChange', 'scrollChange', 'segmentCollectionChange', 'selectionChange', 'sizeChange', 'sourcePointChange', 'targetPointChange', 'textEdit'];\nexport var modelProps = [];\n/**\n * Represents vue Diagram Component\n * ```html\n * <ejs-diagram></ejs-diagram>\n * ```\n */\nvar DiagramComponent = /** @class */ (function (_super) {\n    __extends(DiagramComponent, _super);\n    function DiagramComponent() {\n        var _this = _super.call(this) || this;\n        _this.propKeys = properties;\n        _this.models = modelProps;\n        _this.hasChildDirective = true;\n        _this.hasInjectedModules = true;\n        _this.tagMapper = { \"e-layers\": \"e-layer\", \"e-cursormaps\": \"e-cursormap\", \"e-connectors\": { \"e-connector\": { \"e-connector-annotations\": \"e-connector-annotation\" } }, \"e-nodes\": { \"e-node\": { \"e-node-annotations\": \"e-node-annotation\", \"e-node-ports\": \"e-node-port\" } } };\n        _this.tagNameMapper = { \"e-cursormaps\": \"e-customCursor\", \"e-connector-annotations\": \"e-annotations\", \"e-node-annotations\": \"e-annotations\", \"e-node-ports\": \"e-ports\" };\n        _this.ej2Instances = new Diagram({});\n        _this.bindProperties();\n        _this.ej2Instances._setProperties = _this.ej2Instances.setProperties;\n        _this.ej2Instances.setProperties = _this.setProperties;\n        return _this;\n    }\n    DiagramComponent.prototype.setProperties = function (prop, muteOnChange) {\n        var _this = this;\n        if (this.ej2Instances && this.ej2Instances._setProperties) {\n            this.ej2Instances._setProperties(prop, muteOnChange);\n        }\n        if (prop && this.models && this.models.length) {\n            Object.keys(prop).map(function (key) {\n                _this.models.map(function (model) {\n                    if ((key === model) && !(/datasource/i.test(key))) {\n                        _this.$emit('update:' + key, prop[key]);\n                    }\n                });\n            });\n        }\n    };\n    DiagramComponent.prototype.render = function (createElement) {\n        return createElement('div', this.$slots.default);\n    };\n    DiagramComponent.prototype.add = function (obj, group) {\n        return this.ej2Instances.add(obj, group);\n    };\n    DiagramComponent.prototype.addConnector = function (obj) {\n        return this.ej2Instances.addConnector(obj);\n    };\n    DiagramComponent.prototype.addConnectorLabels = function (obj, labels) {\n        return this.ej2Instances.addConnectorLabels(obj, labels);\n    };\n    DiagramComponent.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return this.ej2Instances.addConstraints(constraintsType, constraintsValue);\n    };\n    DiagramComponent.prototype.addHistoryEntry = function (entry) {\n        return this.ej2Instances.addHistoryEntry(entry);\n    };\n    DiagramComponent.prototype.addLabels = function (obj, labels) {\n        return this.ej2Instances.addLabels(obj, labels);\n    };\n    DiagramComponent.prototype.addLanes = function (node, lane, index) {\n        return this.ej2Instances.addLanes(node, lane, index);\n    };\n    DiagramComponent.prototype.addLayer = function (layer, layerObject) {\n        return this.ej2Instances.addLayer(layer, layerObject);\n    };\n    DiagramComponent.prototype.addNode = function (obj, group) {\n        return this.ej2Instances.addNode(obj, group);\n    };\n    DiagramComponent.prototype.addNodeLabels = function (obj, labels) {\n        return this.ej2Instances.addNodeLabels(obj, labels);\n    };\n    DiagramComponent.prototype.addNodeToLane = function (node, swimLane, lane) {\n        return this.ej2Instances.addNodeToLane(node, swimLane, lane);\n    };\n    DiagramComponent.prototype.addPhases = function (node, phases) {\n        return this.ej2Instances.addPhases(node, phases);\n    };\n    DiagramComponent.prototype.addPorts = function (obj, ports) {\n        return this.ej2Instances.addPorts(obj, ports);\n    };\n    DiagramComponent.prototype.addProcess = function (process, parentId) {\n        return this.ej2Instances.addProcess(process, parentId);\n    };\n    DiagramComponent.prototype.addTextAnnotation = function (annotation, node) {\n        return this.ej2Instances.addTextAnnotation(annotation, node);\n    };\n    DiagramComponent.prototype.align = function (option, objects, type) {\n        return this.ej2Instances.align(option, objects, type);\n    };\n    DiagramComponent.prototype.bringIntoView = function (bound) {\n        return this.ej2Instances.bringIntoView(bound);\n    };\n    DiagramComponent.prototype.bringLayerForward = function (layerName) {\n        return this.ej2Instances.bringLayerForward(layerName);\n    };\n    DiagramComponent.prototype.bringToCenter = function (bound) {\n        return this.ej2Instances.bringToCenter(bound);\n    };\n    DiagramComponent.prototype.bringToFront = function () {\n        return this.ej2Instances.bringToFront();\n    };\n    DiagramComponent.prototype.clear = function () {\n        return this.ej2Instances.clear();\n    };\n    DiagramComponent.prototype.clearHistory = function () {\n        return this.ej2Instances.clearHistory();\n    };\n    DiagramComponent.prototype.clearSelection = function () {\n        return this.ej2Instances.clearSelection();\n    };\n    DiagramComponent.prototype.cloneLayer = function (layerName) {\n        return this.ej2Instances.cloneLayer(layerName);\n    };\n    DiagramComponent.prototype.copy = function () {\n        return this.ej2Instances.copy();\n    };\n    DiagramComponent.prototype.cut = function () {\n        return this.ej2Instances.cut();\n    };\n    DiagramComponent.prototype.distribute = function (option, objects) {\n        return this.ej2Instances.distribute(option, objects);\n    };\n    DiagramComponent.prototype.doLayout = function () {\n        return this.ej2Instances.doLayout();\n    };\n    DiagramComponent.prototype.drag = function (obj, tx, ty) {\n        return this.ej2Instances.drag(obj, tx, ty);\n    };\n    DiagramComponent.prototype.dragSourceEnd = function (obj, tx, ty) {\n        return this.ej2Instances.dragSourceEnd(obj, tx, ty);\n    };\n    DiagramComponent.prototype.dragTargetEnd = function (obj, tx, ty) {\n        return this.ej2Instances.dragTargetEnd(obj, tx, ty);\n    };\n    DiagramComponent.prototype.endGroupAction = function () {\n        return this.ej2Instances.endGroupAction();\n    };\n    DiagramComponent.prototype.exportDiagram = function (options) {\n        return this.ej2Instances.exportDiagram(options);\n    };\n    DiagramComponent.prototype.exportImage = function (image, options) {\n        return this.ej2Instances.exportImage(image, options);\n    };\n    DiagramComponent.prototype.findElementUnderMouse = function (obj, position) {\n        return this.ej2Instances.findElementUnderMouse(obj, position);\n    };\n    DiagramComponent.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.ej2Instances.findObjectUnderMouse(objects, action, inAction);\n    };\n    DiagramComponent.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.ej2Instances.findObjectsUnderMouse(position, source);\n    };\n    DiagramComponent.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.ej2Instances.findTargetObjectUnderMouse(objects, action, inAction, position, source);\n    };\n    DiagramComponent.prototype.fitToPage = function (options) {\n        return this.ej2Instances.fitToPage(options);\n    };\n    DiagramComponent.prototype.getActiveLayer = function () {\n        return this.ej2Instances.getActiveLayer();\n    };\n    DiagramComponent.prototype.getConnectorObject = function (id) {\n        return this.ej2Instances.getConnectorObject(id);\n    };\n    DiagramComponent.prototype.getCursor = function (action, active) {\n        return this.ej2Instances.getCursor(action, active);\n    };\n    DiagramComponent.prototype.getDiagramBounds = function () {\n        return this.ej2Instances.getDiagramBounds();\n    };\n    DiagramComponent.prototype.getDiagramContent = function (styleSheets) {\n        return this.ej2Instances.getDiagramContent(styleSheets);\n    };\n    DiagramComponent.prototype.getNodeObject = function (id) {\n        return this.ej2Instances.getNodeObject(id);\n    };\n    DiagramComponent.prototype.getObject = function (name) {\n        return this.ej2Instances.getObject(name);\n    };\n    DiagramComponent.prototype.getTool = function (action) {\n        return this.ej2Instances.getTool(action);\n    };\n    DiagramComponent.prototype.group = function () {\n        return this.ej2Instances.group();\n    };\n    DiagramComponent.prototype.hideTooltip = function (obj) {\n        return this.ej2Instances.hideTooltip(obj);\n    };\n    DiagramComponent.prototype.insertData = function (node) {\n        return this.ej2Instances.insertData(node);\n    };\n    DiagramComponent.prototype.loadDiagram = function (data) {\n        return this.ej2Instances.loadDiagram(data);\n    };\n    DiagramComponent.prototype.moveForward = function () {\n        return this.ej2Instances.moveForward();\n    };\n    DiagramComponent.prototype.moveObjects = function (objects, targetLayer) {\n        return this.ej2Instances.moveObjects(objects, targetLayer);\n    };\n    DiagramComponent.prototype.moveObjectsUp = function (node, currentLayer) {\n        return this.ej2Instances.moveObjectsUp(node, currentLayer);\n    };\n    DiagramComponent.prototype.nudge = function (direction, x, y) {\n        return this.ej2Instances.nudge(direction, x, y);\n    };\n    DiagramComponent.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        return this.ej2Instances.pan(horizontalOffset, verticalOffset, focusedPoint);\n    };\n    DiagramComponent.prototype.paste = function (obj) {\n        return this.ej2Instances.paste(obj);\n    };\n    DiagramComponent.prototype.print = function (options) {\n        return this.ej2Instances.print(options);\n    };\n    DiagramComponent.prototype.printImage = function (image, options) {\n        return this.ej2Instances.printImage(image, options);\n    };\n    DiagramComponent.prototype.redo = function () {\n        return this.ej2Instances.redo();\n    };\n    DiagramComponent.prototype.remove = function (obj) {\n        return this.ej2Instances.remove(obj);\n    };\n    DiagramComponent.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return this.ej2Instances.removeConstraints(constraintsType, constraintsValue);\n    };\n    DiagramComponent.prototype.removeData = function (node) {\n        return this.ej2Instances.removeData(node);\n    };\n    DiagramComponent.prototype.removeLabels = function (obj, labels) {\n        return this.ej2Instances.removeLabels(obj, labels);\n    };\n    DiagramComponent.prototype.removeLane = function (node, lane) {\n        return this.ej2Instances.removeLane(node, lane);\n    };\n    DiagramComponent.prototype.removeLayer = function (layerId) {\n        return this.ej2Instances.removeLayer(layerId);\n    };\n    DiagramComponent.prototype.removePhase = function (node, phase) {\n        return this.ej2Instances.removePhase(node, phase);\n    };\n    DiagramComponent.prototype.removePorts = function (obj, ports) {\n        return this.ej2Instances.removePorts(obj, ports);\n    };\n    DiagramComponent.prototype.removeProcess = function (id) {\n        return this.ej2Instances.removeProcess(id);\n    };\n    DiagramComponent.prototype.reset = function () {\n        return this.ej2Instances.reset();\n    };\n    DiagramComponent.prototype.rotate = function (obj, angle, pivot) {\n        return this.ej2Instances.rotate(obj, angle, pivot);\n    };\n    DiagramComponent.prototype.sameSize = function (option, objects) {\n        return this.ej2Instances.sameSize(option, objects);\n    };\n    DiagramComponent.prototype.saveDiagram = function () {\n        return this.ej2Instances.saveDiagram();\n    };\n    DiagramComponent.prototype.scale = function (obj, sx, sy, pivot) {\n        return this.ej2Instances.scale(obj, sx, sy, pivot);\n    };\n    DiagramComponent.prototype.select = function (objects, multipleSelection) {\n        return this.ej2Instances.select(objects, multipleSelection);\n    };\n    DiagramComponent.prototype.selectAll = function () {\n        return this.ej2Instances.selectAll();\n    };\n    DiagramComponent.prototype.sendBackward = function () {\n        return this.ej2Instances.sendBackward();\n    };\n    DiagramComponent.prototype.sendLayerBackward = function (layerName) {\n        return this.ej2Instances.sendLayerBackward(layerName);\n    };\n    DiagramComponent.prototype.sendToBack = function () {\n        return this.ej2Instances.sendToBack();\n    };\n    DiagramComponent.prototype.setActiveLayer = function (layerName) {\n        return this.ej2Instances.setActiveLayer(layerName);\n    };\n    DiagramComponent.prototype.setStackLimit = function (stackLimit) {\n        return this.ej2Instances.setStackLimit(stackLimit);\n    };\n    DiagramComponent.prototype.showTooltip = function (obj) {\n        return this.ej2Instances.showTooltip(obj);\n    };\n    DiagramComponent.prototype.startGroupAction = function () {\n        return this.ej2Instances.startGroupAction();\n    };\n    DiagramComponent.prototype.startTextEdit = function (node, id) {\n        return this.ej2Instances.startTextEdit(node, id);\n    };\n    DiagramComponent.prototype.unGroup = function () {\n        return this.ej2Instances.unGroup();\n    };\n    DiagramComponent.prototype.unSelect = function (obj) {\n        return this.ej2Instances.unSelect(obj);\n    };\n    DiagramComponent.prototype.undo = function () {\n        return this.ej2Instances.undo();\n    };\n    DiagramComponent.prototype.updateData = function (node) {\n        return this.ej2Instances.updateData(node);\n    };\n    DiagramComponent.prototype.updateViewPort = function () {\n        return this.ej2Instances.updateViewPort();\n    };\n    DiagramComponent.prototype.zoom = function (factor, focusedPoint) {\n        return this.ej2Instances.zoom(factor, focusedPoint);\n    };\n    DiagramComponent.prototype.zoomTo = function (options) {\n        return this.ej2Instances.zoomTo(options);\n    };\n    DiagramComponent = __decorate([\n        EJComponentDecorator({\n            props: properties\n        })\n    ], DiagramComponent);\n    return DiagramComponent;\n}(ComponentBase));\nexport { DiagramComponent };\nexport var DiagramPlugin = {\n    name: 'ejs-diagram',\n    install: function (Vue) {\n        Vue.component(DiagramPlugin.name, DiagramComponent);\n        Vue.component(LayerPlugin.name, LayerDirective);\n        Vue.component(LayersPlugin.name, LayersDirective);\n        Vue.component(CustomCursorPlugin.name, CustomCursorDirective);\n        Vue.component(CustomCursorsPlugin.name, CustomCursorsDirective);\n        Vue.component(ConnectorPlugin.name, ConnectorDirective);\n        Vue.component(ConnectorsPlugin.name, ConnectorsDirective);\n        Vue.component(ConnectorAnnotationPlugin.name, ConnectorAnnotationDirective);\n        Vue.component(ConnectorAnnotationsPlugin.name, ConnectorAnnotationsDirective);\n        Vue.component(NodePlugin.name, NodeDirective);\n        Vue.component(NodesPlugin.name, NodesDirective);\n        Vue.component(NodeAnnotationPlugin.name, NodeAnnotationDirective);\n        Vue.component(NodeAnnotationsPlugin.name, NodeAnnotationsDirective);\n        Vue.component(PortPlugin.name, PortDirective);\n        Vue.component(PortsPlugin.name, PortsDirective);\n    }\n};\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content,\n                style: shape.header.annotation.style ? shape.header.annotation.style : undefined,\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Position library\n */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nvar elementRect;\nvar popupRect;\nvar element;\nvar parentDocument;\nvar fixedParent = false;\nexport function calculateRelativeBasedPosition(anchor, element) {\n    var fixedElement = false;\n    var anchorPos = { left: 0, top: 0 };\n    var tempAnchor = anchor;\n    if (!anchor || !element) {\n        return anchorPos;\n    }\n    if (isNullOrUndefined(element.offsetParent) && element.style.position === 'fixed') {\n        fixedElement = true;\n    }\n    while ((element.offsetParent || fixedElement) && anchor && element.offsetParent !== anchor) {\n        anchorPos.left += anchor.offsetLeft;\n        anchorPos.top += anchor.offsetTop;\n        anchor = anchor.offsetParent;\n    }\n    anchor = tempAnchor;\n    while ((element.offsetParent || fixedElement) && anchor && element.offsetParent !== anchor) {\n        anchorPos.left -= anchor.scrollLeft;\n        anchorPos.top -= anchor.scrollTop;\n        anchor = anchor.parentElement;\n    }\n    return anchorPos;\n}\nexport function calculatePosition(currentElement, positionX, positionY, parentElement, targetValues) {\n    (positionY + positionX === 'topright') ? popupRect = undefined : popupRect = targetValues;\n    popupRect = targetValues;\n    fixedParent = parentElement ? true : false;\n    if (!currentElement) {\n        return { left: 0, top: 0 };\n    }\n    if (!positionX) {\n        positionX = 'left';\n    }\n    if (!positionY) {\n        positionY = 'top';\n    }\n    parentDocument = currentElement.ownerDocument;\n    element = currentElement;\n    var pos = { left: 0, top: 0 };\n    return updatePosition(positionX.toLowerCase(), positionY.toLowerCase(), pos);\n}\nfunction setPosx(value, pos) {\n    pos.left = value;\n}\nfunction setPosy(value, pos) {\n    pos.top = value;\n}\nfunction updatePosition(posX, posY, pos) {\n    elementRect = element.getBoundingClientRect();\n    switch (posY + posX) {\n        case 'topcenter':\n            setPosx(getElementHCenter(), pos);\n            setPosy(getElementTop(), pos);\n            break;\n        case 'topright':\n            setPosx(getElementRight(), pos);\n            setPosy(getElementTop(), pos);\n            break;\n        case 'centercenter':\n            setPosx(getElementHCenter(), pos);\n            setPosy(getElementVCenter(), pos);\n            break;\n        case 'centerright':\n            setPosx(getElementRight(), pos);\n            setPosy(getElementVCenter(), pos);\n            break;\n        case 'centerleft':\n            setPosx(getElementLeft(), pos);\n            setPosy(getElementVCenter(), pos);\n            break;\n        case 'bottomcenter':\n            setPosx(getElementHCenter(), pos);\n            setPosy(getElementBottom(), pos);\n            break;\n        case 'bottomright':\n            setPosx(getElementRight(), pos);\n            setPosy(getElementBottom(), pos);\n            break;\n        case 'bottomleft':\n            setPosx(getElementLeft(), pos);\n            setPosy(getElementBottom(), pos);\n            break;\n        default:\n        case 'topleft':\n            setPosx(getElementLeft(), pos);\n            setPosy(getElementTop(), pos);\n            break;\n    }\n    return pos;\n}\nfunction getBodyScrollTop() {\n    return parentDocument.documentElement.scrollTop || parentDocument.body.scrollTop;\n}\nfunction getBodyScrollLeft() {\n    return parentDocument.documentElement.scrollLeft || parentDocument.body.scrollLeft;\n}\nfunction getElementBottom() {\n    return fixedParent ? elementRect.bottom : elementRect.bottom + getBodyScrollTop();\n}\nfunction getElementVCenter() {\n    return getElementTop() + (elementRect.height / 2);\n}\nfunction getElementTop() {\n    return fixedParent ? elementRect.top : elementRect.top + getBodyScrollTop();\n}\nfunction getElementLeft() {\n    return elementRect.left + getBodyScrollLeft();\n}\nfunction getElementRight() {\n    return elementRect.right + getBodyScrollLeft() - (popupRect ? popupRect.width : 0);\n}\nfunction getElementHCenter() {\n    return getElementLeft() + (elementRect.width / 2);\n}\n","/**\n * Collision module.\n */\nimport { calculatePosition } from './position';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nvar parentDocument;\nvar targetContainer;\nexport function fit(element, viewPortElement, axis, position) {\n    if (viewPortElement === void 0) { viewPortElement = null; }\n    if (axis === void 0) { axis = { X: false, Y: false }; }\n    if (!axis.Y && !axis.X) {\n        return { left: 0, top: 0 };\n    }\n    var elemData = element.getBoundingClientRect();\n    targetContainer = viewPortElement;\n    parentDocument = element.ownerDocument;\n    if (!position) {\n        position = calculatePosition(element, 'left', 'top');\n    }\n    if (axis.X) {\n        var containerWidth = targetContainer ? getTargetContainerWidth() : getViewPortWidth();\n        var containerLeft = ContainerLeft();\n        var containerRight = ContainerRight();\n        var overLeft = containerLeft - position.left;\n        var overRight = position.left + elemData.width - containerRight;\n        if (elemData.width > containerWidth) {\n            if (overLeft > 0 && overRight <= 0) {\n                position.left = containerRight - elemData.width;\n            }\n            else if (overRight > 0 && overLeft <= 0) {\n                position.left = containerLeft;\n            }\n            else {\n                position.left = overLeft > overRight ? (containerRight - elemData.width) : containerLeft;\n            }\n        }\n        else if (overLeft > 0) {\n            position.left += overLeft;\n        }\n        else if (overRight > 0) {\n            position.left -= overRight;\n        }\n    }\n    if (axis.Y) {\n        var containerHeight = targetContainer ? getTargetContainerHeight() : getViewPortHeight();\n        var containerTop = ContainerTop();\n        var containerBottom = ContainerBottom();\n        var overTop = containerTop - position.top;\n        var overBottom = position.top + elemData.height - containerBottom;\n        if (elemData.height > containerHeight) {\n            if (overTop > 0 && overBottom <= 0) {\n                position.top = containerBottom - elemData.height;\n            }\n            else if (overBottom > 0 && overTop <= 0) {\n                position.top = containerTop;\n            }\n            else {\n                position.top = overTop > overBottom ? (containerBottom - elemData.height) : containerTop;\n            }\n        }\n        else if (overTop > 0) {\n            position.top += overTop;\n        }\n        else if (overBottom > 0) {\n            position.top -= overBottom;\n        }\n    }\n    return position;\n}\nexport function isCollide(element, viewPortElement, x, y) {\n    if (viewPortElement === void 0) { viewPortElement = null; }\n    var elemOffset = calculatePosition(element, 'left', 'top');\n    if (x) {\n        elemOffset.left = x;\n    }\n    if (y) {\n        elemOffset.top = y;\n    }\n    var data = [];\n    targetContainer = viewPortElement;\n    parentDocument = element.ownerDocument;\n    var elementRect = element.getBoundingClientRect();\n    var top = elemOffset.top;\n    var left = elemOffset.left;\n    var right = elemOffset.left + elementRect.width;\n    var bottom = elemOffset.top + elementRect.height;\n    var topData = '';\n    var leftData = '';\n    var yAxis = topCollideCheck(top, bottom);\n    var xAxis = leftCollideCheck(left, right);\n    if (yAxis.topSide) {\n        data.push('top');\n    }\n    if (xAxis.rightSide) {\n        data.push('right');\n    }\n    if (xAxis.leftSide) {\n        data.push('left');\n    }\n    if (yAxis.bottomSide) {\n        data.push('bottom');\n    }\n    return data;\n}\nexport function flip(element, target, offsetX, offsetY, positionX, positionY, viewPortElement, axis, fixedParent) {\n    if (viewPortElement === void 0) { viewPortElement = null; }\n    if (axis === void 0) { axis = { X: true, Y: true }; }\n    if (!target || !element || !positionX || !positionY || (!axis.X && !axis.Y)) {\n        return;\n    }\n    var tEdge = { TL: null,\n        TR: null,\n        BL: null,\n        BR: null };\n    var eEdge = {\n        TL: null,\n        TR: null,\n        BL: null,\n        BR: null\n    };\n    var elementRect = element.getBoundingClientRect();\n    var pos = {\n        posX: positionX, posY: positionY, offsetX: offsetX, offsetY: offsetY, position: { left: 0, top: 0 }\n    };\n    targetContainer = viewPortElement;\n    parentDocument = target.ownerDocument;\n    updateElementData(target, tEdge, pos, fixedParent, elementRect);\n    setPosition(eEdge, pos, elementRect);\n    if (axis.X) {\n        leftFlip(target, eEdge, tEdge, pos, elementRect, true);\n    }\n    if (axis.Y && tEdge.TL.top > -1) {\n        topFlip(target, eEdge, tEdge, pos, elementRect, true);\n    }\n    setPopup(element, pos, elementRect);\n}\nfunction setPopup(element, pos, elementRect) {\n    var left = 0;\n    var top = 0;\n    if (element.offsetParent != null\n        && (getComputedStyle(element.offsetParent).position === 'absolute' ||\n            getComputedStyle(element.offsetParent).position === 'relative')) {\n        var data = calculatePosition(element.offsetParent, 'left', 'top', false, elementRect);\n        left = data.left;\n        top = data.top;\n    }\n    element.style.top = (pos.position.top + pos.offsetY - (top)) + 'px';\n    element.style.left = (pos.position.left + pos.offsetX - (left)) + 'px';\n}\nfunction updateElementData(target, edge, pos, fixedParent, elementRect) {\n    pos.position = calculatePosition(target, pos.posX, pos.posY, fixedParent, elementRect);\n    edge.TL = calculatePosition(target, 'left', 'top', fixedParent, elementRect);\n    edge.TR = calculatePosition(target, 'right', 'top', fixedParent, elementRect);\n    edge.BR = calculatePosition(target, 'left', 'bottom', fixedParent, elementRect);\n    edge.BL = calculatePosition(target, 'right', 'bottom', fixedParent, elementRect);\n}\nfunction setPosition(eStatus, pos, elementRect) {\n    eStatus.TL = { top: pos.position.top + pos.offsetY, left: pos.position.left + pos.offsetX };\n    eStatus.TR = { top: eStatus.TL.top, left: eStatus.TL.left + elementRect.width };\n    eStatus.BL = { top: eStatus.TL.top + elementRect.height,\n        left: eStatus.TL.left };\n    eStatus.BR = { top: eStatus.TL.top + elementRect.height,\n        left: eStatus.TL.left + elementRect.width };\n}\nfunction leftCollideCheck(left, right) {\n    var leftSide = false;\n    var rightSide = false;\n    if (((left - getBodyScrollLeft()) < ContainerLeft())) {\n        leftSide = true;\n    }\n    if (right > ContainerRight()) {\n        rightSide = true;\n    }\n    return { leftSide: leftSide, rightSide: rightSide };\n}\nfunction leftFlip(target, edge, tEdge, pos, elementRect, deepCheck) {\n    var collideSide = leftCollideCheck(edge.TL.left, edge.TR.left);\n    if ((tEdge.TL.left - getBodyScrollLeft()) <= ContainerLeft()) {\n        collideSide.leftSide = false;\n    }\n    if (tEdge.TR.left >= ContainerRight()) {\n        collideSide.rightSide = false;\n    }\n    if ((collideSide.leftSide && !collideSide.rightSide) || (!collideSide.leftSide && collideSide.rightSide)) {\n        if (pos.posX === 'right') {\n            pos.posX = 'left';\n        }\n        else {\n            pos.posX = 'right';\n        }\n        pos.offsetX = pos.offsetX + elementRect.width;\n        pos.offsetX = -1 * pos.offsetX;\n        pos.position = calculatePosition(target, pos.posX, pos.posY, false);\n        setPosition(edge, pos, elementRect);\n        if (deepCheck) {\n            leftFlip(target, edge, tEdge, pos, elementRect, false);\n        }\n    }\n}\nfunction topFlip(target, edge, tEdge, pos, elementRect, deepCheck) {\n    var collideSide = topCollideCheck(edge.TL.top, edge.BL.top);\n    if ((tEdge.TL.top - getBodyScrollTop()) <= ContainerTop()) {\n        collideSide.topSide = false;\n    }\n    if (tEdge.BL.top >= ContainerBottom()) {\n        collideSide.bottomSide = false;\n    }\n    if ((collideSide.topSide && !collideSide.bottomSide) || (!collideSide.topSide && collideSide.bottomSide)) {\n        if (pos.posY === 'top') {\n            pos.posY = 'bottom';\n        }\n        else {\n            pos.posY = 'top';\n        }\n        pos.offsetY = pos.offsetY + elementRect.height;\n        pos.offsetY = -1 * pos.offsetY;\n        pos.position = calculatePosition(target, pos.posX, pos.posY, false, elementRect);\n        setPosition(edge, pos, elementRect);\n        if (deepCheck) {\n            topFlip(target, edge, tEdge, pos, elementRect, false);\n        }\n    }\n}\nfunction topCollideCheck(top, bottom) {\n    var topSide = false;\n    var bottomSide = false;\n    if ((top - getBodyScrollTop()) < ContainerTop()) {\n        topSide = true;\n    }\n    if (bottom > ContainerBottom()) {\n        bottomSide = true;\n    }\n    return { topSide: topSide, bottomSide: bottomSide };\n}\nfunction getTargetContainerWidth() {\n    return targetContainer.getBoundingClientRect().width;\n}\nfunction getTargetContainerHeight() {\n    return targetContainer.getBoundingClientRect().height;\n}\nfunction getTargetContainerLeft() {\n    return targetContainer.getBoundingClientRect().left;\n}\nfunction getTargetContainerTop() {\n    return targetContainer.getBoundingClientRect().top;\n}\nfunction ContainerTop() {\n    if (targetContainer) {\n        return getTargetContainerTop();\n    }\n    return 0;\n}\nfunction ContainerLeft() {\n    if (targetContainer) {\n        return getTargetContainerLeft();\n    }\n    return 0;\n}\nfunction ContainerRight() {\n    if (targetContainer) {\n        return (getBodyScrollLeft() + getTargetContainerLeft() + getTargetContainerWidth());\n    }\n    return (getBodyScrollLeft() + getViewPortWidth());\n}\nfunction ContainerBottom() {\n    if (targetContainer) {\n        return (getBodyScrollTop() + getTargetContainerTop() + getTargetContainerHeight());\n    }\n    return (getBodyScrollTop() + getViewPortHeight());\n}\nfunction getBodyScrollTop() {\n    // if(targetContainer)\n    //     return targetContainer.scrollTop;\n    return parentDocument.documentElement.scrollTop || parentDocument.body.scrollTop;\n}\nfunction getBodyScrollLeft() {\n    // if(targetContainer)\n    //     return targetContainer.scrollLeft;\n    return parentDocument.documentElement.scrollLeft || parentDocument.body.scrollLeft;\n}\nfunction getViewPortHeight() {\n    return window.innerHeight;\n}\nfunction getViewPortWidth() {\n    var windowWidth = window.innerWidth;\n    var offsetWidth = (isNullOrUndefined(document.documentElement)) ? 0 : document.documentElement.offsetWidth;\n    return windowWidth - (windowWidth - offsetWidth);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { setStyleAttribute, addClass, removeClass, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, formatUnit } from '@syncfusion/ej2-base';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { calculatePosition, calculateRelativeBasedPosition } from '../common/position';\nimport { Animation, Property, Event, Component } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges } from '@syncfusion/ej2-base';\nimport { EventHandler } from '@syncfusion/ej2-base';\nimport { flip, fit, isCollide } from '../common/collision';\n/**\n * Specifies the offset position values.\n */\nvar PositionData = /** @class */ (function (_super) {\n    __extends(PositionData, _super);\n    function PositionData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('left')\n    ], PositionData.prototype, \"X\", void 0);\n    __decorate([\n        Property('top')\n    ], PositionData.prototype, \"Y\", void 0);\n    return PositionData;\n}(ChildProperty));\nexport { PositionData };\n// don't use space in classNames\nvar CLASSNAMES = {\n    ROOT: 'e-popup',\n    RTL: 'e-rtl',\n    OPEN: 'e-popup-open',\n    CLOSE: 'e-popup-close'\n};\n/**\n * Represents the Popup Component\n * ```html\n * <div id=\"popup\" style=\"position:absolute;height:100px;width:100px;\">\n * <div style=\"margin:35px 25px;\">Popup Content</div></div>\n * ```\n * ```typescript\n * <script>\n *   var popupObj = new Popup();\n *   popupObj.appendTo(\"#popup\");\n * </script>\n * ```\n */\nvar Popup = /** @class */ (function (_super) {\n    __extends(Popup, _super);\n    function Popup(element, options) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    Popup.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    setStyleAttribute(this.element, { 'width': formatUnit(newProp.width) });\n                    break;\n                case 'height':\n                    setStyleAttribute(this.element, { 'height': formatUnit(newProp.height) });\n                    break;\n                case 'zIndex':\n                    setStyleAttribute(this.element, { 'zIndex': newProp.zIndex });\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'position':\n                case 'relateTo':\n                    this.refreshPosition();\n                    break;\n                case 'offsetX':\n                    var x = newProp.offsetX - oldProp.offsetX;\n                    this.element.style.left = (parseInt(this.element.style.left, 10) + (x)).toString() + 'px';\n                    break;\n                case 'offsetY':\n                    var y = newProp.offsetY - oldProp.offsetY;\n                    this.element.style.top = (parseInt(this.element.style.top, 10) + (y)).toString() + 'px';\n                    break;\n                case 'content':\n                    this.setContent();\n                    break;\n                case 'actionOnScroll':\n                    if (newProp.actionOnScroll !== 'none') {\n                        this.wireScrollEvents();\n                    }\n                    else {\n                        this.unwireScrollEvents();\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * gets the Component module name.\n     * @private\n     */\n    Popup.prototype.getModuleName = function () {\n        return 'popup';\n    };\n    /**\n     * gets the persisted state properties of the Component.\n     */\n    Popup.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * To destroy the control.\n     */\n    Popup.prototype.destroy = function () {\n        this.element.classList.remove(CLASSNAMES.ROOT, CLASSNAMES.RTL);\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Popup.prototype.render = function () {\n        this.element.classList.add(CLASSNAMES.ROOT);\n        var styles = {};\n        if (this.zIndex !== 1000) {\n            styles.zIndex = this.zIndex;\n        }\n        if (this.width !== 'auto') {\n            styles.width = formatUnit(this.width);\n        }\n        if (this.height !== 'auto') {\n            styles.height = formatUnit(this.height);\n        }\n        setStyleAttribute(this.element, styles);\n        this.fixedParent = false;\n        this.setEnableRtl();\n        this.setContent();\n    };\n    Popup.prototype.wireEvents = function () {\n        if (Browser.isDevice) {\n            EventHandler.add(window, 'orientationchange', this.orientationOnChange, this);\n        }\n        if (this.actionOnScroll !== 'none') {\n            this.wireScrollEvents();\n        }\n    };\n    Popup.prototype.wireScrollEvents = function () {\n        if (this.getRelateToElement()) {\n            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {\n                var parent_1 = _a[_i];\n                EventHandler.add(parent_1, 'scroll', this.scrollRefresh, this);\n            }\n        }\n    };\n    Popup.prototype.unwireEvents = function () {\n        if (Browser.isDevice) {\n            EventHandler.remove(window, 'orientationchange', this.orientationOnChange);\n        }\n        if (this.actionOnScroll !== 'none') {\n            this.unwireScrollEvents();\n        }\n    };\n    Popup.prototype.unwireScrollEvents = function () {\n        if (this.getRelateToElement()) {\n            for (var _i = 0, _a = this.getScrollableParent(this.getRelateToElement()); _i < _a.length; _i++) {\n                var parent_2 = _a[_i];\n                EventHandler.remove(parent_2, 'scroll', this.scrollRefresh);\n            }\n        }\n    };\n    Popup.prototype.getRelateToElement = function () {\n        var relateToElement = this.relateTo === '' || isNullOrUndefined(this.relateTo) ?\n            document.body : this.relateTo;\n        this.setProperties({ relateTo: relateToElement }, true);\n        return ((typeof this.relateTo) === 'string') ?\n            document.querySelector(this.relateTo) : this.relateTo;\n    };\n    Popup.prototype.scrollRefresh = function (e) {\n        if (this.actionOnScroll === 'reposition') {\n            if (!(this.element.offsetParent === e.target ||\n                (this.element.offsetParent && this.element.offsetParent.tagName === 'BODY' &&\n                    e.target.parentElement == null))) {\n                this.refreshPosition();\n            }\n        }\n        else if (this.actionOnScroll === 'hide') {\n            this.hide();\n        }\n        if (this.actionOnScroll !== 'none') {\n            if (this.getRelateToElement()) {\n                var targetVisible = this.isElementOnViewport(this.getRelateToElement(), e.target);\n                if (!targetVisible && !this.targetInvisibleStatus) {\n                    this.trigger('targetExitViewport');\n                    this.targetInvisibleStatus = true;\n                }\n                else if (targetVisible) {\n                    this.targetInvisibleStatus = false;\n                }\n            }\n        }\n    };\n    /**\n     * This method is to get the element visibility on viewport when scroll\n     * the page. This method will returns true even though 1 px of element\n     * part is in visible.\n     */\n    Popup.prototype.isElementOnViewport = function (relateToElement, scrollElement) {\n        var scrollParents = this.getScrollableParent(relateToElement);\n        for (var parent_3 = 0; parent_3 < scrollParents.length; parent_3++) {\n            if (this.isElementVisible(relateToElement, scrollParents[parent_3])) {\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    };\n    Popup.prototype.isElementVisible = function (relateToElement, scrollElement) {\n        var rect = this.checkGetBoundingClientRect(relateToElement);\n        if (!rect.height || !rect.width) {\n            return false;\n        }\n        if (!isNullOrUndefined(this.checkGetBoundingClientRect(scrollElement))) {\n            var parent_4 = scrollElement.getBoundingClientRect();\n            return !(rect.bottom < parent_4.top) &&\n                (!(rect.bottom > parent_4.bottom) &&\n                    (!(rect.right > parent_4.right) &&\n                        !(rect.left < parent_4.left)));\n        }\n        else {\n            var win = window;\n            var windowView = {\n                top: win.scrollY,\n                left: win.scrollX,\n                right: win.scrollX + win.outerWidth,\n                bottom: win.scrollY + win.outerHeight\n            };\n            var off = calculatePosition(relateToElement);\n            var ele = {\n                top: off.top,\n                left: off.left,\n                right: off.left + rect.width,\n                bottom: off.top + rect.height\n            };\n            var elementView = {\n                top: windowView.bottom - ele.top,\n                left: windowView.right - ele.left,\n                bottom: ele.bottom - windowView.top,\n                right: ele.right - windowView.left\n            };\n            return elementView.top > 0\n                && elementView.left > 0\n                && elementView.right > 0\n                && elementView.bottom > 0;\n        }\n    };\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    Popup.prototype.preRender = function () {\n        //There is no event handler\n    };\n    Popup.prototype.setEnableRtl = function () {\n        this.reposition();\n        this.enableRtl ? this.element.classList.add(CLASSNAMES.RTL) : this.element.classList.remove(CLASSNAMES.RTL);\n    };\n    Popup.prototype.setContent = function () {\n        if (!isNullOrUndefined(this.content)) {\n            this.element.innerHTML = '';\n            if (typeof (this.content) === 'string') {\n                this.element.textContent = this.content;\n            }\n            else {\n                this.element.appendChild(this.content);\n            }\n        }\n    };\n    Popup.prototype.orientationOnChange = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.refreshPosition();\n        }, 200);\n    };\n    /**\n     * Based on the `relative` element and `offset` values, `Popup` element position will refreshed.\n     */\n    Popup.prototype.refreshPosition = function (target, collision) {\n        if (!isNullOrUndefined(target)) {\n            this.checkFixedParent(target);\n        }\n        this.reposition();\n        if (!collision) {\n            this.checkCollision();\n        }\n    };\n    Popup.prototype.reposition = function () {\n        var pos;\n        var position;\n        var relateToElement = this.getRelateToElement();\n        if (typeof this.position.X === 'number' && typeof this.position.Y === 'number') {\n            pos = { left: this.position.X, top: this.position.Y };\n        }\n        else if ((typeof this.position.X === 'string' && typeof this.position.Y === 'number') ||\n            (typeof this.position.X === 'number' && typeof this.position.Y === 'string')) {\n            var display = this.element.style.display;\n            var parentDisplay = void 0;\n            this.element.style.display = 'block';\n            if (this.element.classList.contains('e-dlg-modal')) {\n                parentDisplay = this.element.parentElement.style.display;\n                this.element.parentElement.style.display = 'block';\n            }\n            position = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);\n            if (typeof this.position.X === 'string') {\n                pos = { left: position.left, top: this.position.Y };\n            }\n            else {\n                pos = { left: this.position.X, top: position.top };\n            }\n            this.element.style.display = display;\n            if (this.element.classList.contains('e-dlg-modal')) {\n                this.element.parentElement.style.display = parentDisplay;\n            }\n        }\n        else if (relateToElement) {\n            var display = this.element.style.display;\n            this.element.style.display = 'block';\n            pos = this.getAnchorPosition(relateToElement, this.element, this.position, this.offsetX, this.offsetY);\n            this.element.style.display = display;\n        }\n        else {\n            pos = { left: 0, top: 0 };\n        }\n        if (!isNullOrUndefined(pos)) {\n            this.element.style.left = pos.left + 'px';\n            this.element.style.top = pos.top + 'px';\n        }\n    };\n    Popup.prototype.checkGetBoundingClientRect = function (ele) {\n        var eleRect;\n        try {\n            eleRect = ele.getBoundingClientRect();\n            return eleRect;\n        }\n        catch (error) {\n            return null;\n        }\n    };\n    Popup.prototype.getAnchorPosition = function (anchorEle, ele, position, offsetX, offsetY) {\n        var eleRect = this.checkGetBoundingClientRect(ele);\n        var anchorRect = this.checkGetBoundingClientRect(anchorEle);\n        if (isNullOrUndefined(eleRect) || isNullOrUndefined(anchorRect)) {\n            return null;\n        }\n        var anchor = anchorEle;\n        var anchorPos = { left: 0, top: 0 };\n        if (ele.offsetParent && ele.offsetParent.tagName === 'BODY' && anchorEle.tagName === 'BODY') {\n            anchorPos = calculatePosition(anchorEle);\n        }\n        else {\n            if ((ele.classList.contains('e-dlg-modal') && anchor.tagName !== 'BODY')) {\n                ele = ele.parentElement;\n            }\n            anchorPos = calculateRelativeBasedPosition(anchor, ele);\n        }\n        switch (position.X) {\n            default:\n            case 'left':\n                break;\n            case 'center':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.left += (window.innerWidth / 2 - eleRect.width / 2);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.left += (anchorRect.width / 2 - eleRect.width / 2);\n                }\n                else {\n                    anchorPos.left += (anchorRect.width / 2);\n                }\n                break;\n            case 'right':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.left += (window.innerWidth - eleRect.width);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.left += (anchorRect.width - eleRect.width);\n                }\n                else {\n                    anchorPos.left += (anchorRect.width);\n                }\n                break;\n        }\n        switch (position.Y) {\n            default:\n            case 'top':\n                break;\n            case 'center':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.top += (window.innerHeight / 2 - eleRect.height / 2);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.top += (anchorRect.height / 2 - eleRect.height / 2);\n                }\n                else {\n                    anchorPos.top += (anchorRect.height / 2);\n                }\n                break;\n            case 'bottom':\n                if ((ele.classList.contains('e-dlg-modal') && anchor.tagName === 'BODY' && this.targetType === 'container')) {\n                    anchorPos.top += (window.innerHeight - eleRect.height);\n                }\n                else if (this.targetType === 'container') {\n                    anchorPos.top += (anchorRect.height - eleRect.height);\n                }\n                else {\n                    anchorPos.top += (anchorRect.height);\n                }\n                break;\n        }\n        anchorPos.left += offsetX;\n        anchorPos.top += offsetY;\n        return anchorPos;\n    };\n    Popup.prototype.callFlip = function (param) {\n        var relateToElement = this.getRelateToElement();\n        flip(this.element, relateToElement, this.offsetX, this.offsetY, this.position.X, this.position.Y, this.viewPortElement, param, this.fixedParent);\n    };\n    Popup.prototype.callFit = function (param) {\n        if (isCollide(this.element, this.viewPortElement).length !== 0) {\n            if (isNullOrUndefined(this.viewPortElement)) {\n                var data = fit(this.element, this.viewPortElement, param);\n                if (param.X) {\n                    this.element.style.left = data.left + 'px';\n                }\n                if (param.Y) {\n                    this.element.style.top = data.top + 'px';\n                }\n            }\n            else {\n                var elementRect = this.checkGetBoundingClientRect(this.element);\n                var viewPortRect = this.checkGetBoundingClientRect(this.viewPortElement);\n                if (isNullOrUndefined(elementRect) || isNullOrUndefined(viewPortRect)) {\n                    return null;\n                }\n                if (param && param.Y === true) {\n                    if (viewPortRect.top > elementRect.top) {\n                        this.element.style.top = '0px';\n                    }\n                    else if (viewPortRect.bottom < elementRect.bottom) {\n                        this.element.style.top = parseInt(this.element.style.top, 10) - (elementRect.bottom - viewPortRect.bottom) + 'px';\n                    }\n                }\n                if (param && param.X === true) {\n                    if (viewPortRect.right < elementRect.right) {\n                        this.element.style.left = parseInt(this.element.style.left, 10) - (elementRect.right - viewPortRect.right) + 'px';\n                    }\n                    else if (viewPortRect.left > elementRect.left) {\n                        this.element.style.left = parseInt(this.element.style.left, 10) + (viewPortRect.left - elementRect.left) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Popup.prototype.checkCollision = function () {\n        var horz = this.collision.X;\n        var vert = this.collision.Y;\n        if (horz === 'none' && vert === 'none') {\n            return;\n        }\n        if (horz === 'flip' && vert === 'flip') {\n            this.callFlip({ X: true, Y: true });\n        }\n        else if (horz === 'fit' && vert === 'fit') {\n            this.callFit({ X: true, Y: true });\n        }\n        else {\n            if (horz === 'flip') {\n                this.callFlip({ X: true, Y: false });\n            }\n            else if (vert === 'flip') {\n                this.callFlip({ Y: true, X: false });\n            }\n            if (horz === 'fit') {\n                this.callFit({ X: true, Y: false });\n            }\n            else if (vert === 'fit') {\n                this.callFit({ X: false, Y: true });\n            }\n        }\n    };\n    /**\n     * Shows the popup element from screen.\n     * @param { AnimationModel | Function } collisionOrAnimationOptions? - To pass animation options or collision function.\n     * @param { Function } collision? - To pass the collision function.\n     * @param { HTMLElement } relativeElement? - To calculate the zIndex value dynamically.\n     */\n    Popup.prototype.show = function (animationOptions, relativeElement) {\n        var _this = this;\n        this.wireEvents();\n        if (this.zIndex === 1000 || !isNullOrUndefined(relativeElement)) {\n            var zIndexElement = (isNullOrUndefined(relativeElement)) ? this.element : relativeElement;\n            this.zIndex = getZindexPartial(zIndexElement);\n            setStyleAttribute(this.element, { 'zIndex': this.zIndex });\n        }\n        animationOptions = (!isNullOrUndefined(animationOptions) && typeof animationOptions === 'object') ?\n            animationOptions : this.showAnimation;\n        if (this.collision.X !== 'none' || this.collision.Y !== 'none') {\n            removeClass([this.element], CLASSNAMES.CLOSE);\n            addClass([this.element], CLASSNAMES.OPEN);\n            this.checkCollision();\n            removeClass([this.element], CLASSNAMES.OPEN);\n            addClass([this.element], CLASSNAMES.CLOSE);\n        }\n        if (!isNullOrUndefined(animationOptions)) {\n            animationOptions.begin = function () {\n                if (!_this.isDestroyed) {\n                    removeClass([_this.element], CLASSNAMES.CLOSE);\n                    addClass([_this.element], CLASSNAMES.OPEN);\n                }\n            };\n            animationOptions.end = function () {\n                if (!_this.isDestroyed) {\n                    _this.trigger('open');\n                }\n            };\n            new Animation(animationOptions).animate(this.element);\n        }\n        else {\n            removeClass([this.element], CLASSNAMES.CLOSE);\n            addClass([this.element], CLASSNAMES.OPEN);\n            this.trigger('open');\n        }\n    };\n    /**\n     * Hides the popup element from screen.\n     * @param { AnimationModel } animationOptions? - To give the animation options.\n     */\n    Popup.prototype.hide = function (animationOptions) {\n        var _this = this;\n        animationOptions = (!isNullOrUndefined(animationOptions) && typeof animationOptions === 'object') ?\n            animationOptions : this.hideAnimation;\n        if (!isNullOrUndefined(animationOptions)) {\n            animationOptions.end = function () {\n                if (!_this.isDestroyed) {\n                    removeClass([_this.element], CLASSNAMES.OPEN);\n                    addClass([_this.element], CLASSNAMES.CLOSE);\n                    _this.trigger('close');\n                }\n            };\n            new Animation(animationOptions).animate(this.element);\n        }\n        else {\n            removeClass([this.element], CLASSNAMES.OPEN);\n            addClass([this.element], CLASSNAMES.CLOSE);\n            this.trigger('close');\n        }\n        this.unwireEvents();\n    };\n    /**\n     * Gets scrollable parent elements for the given element.\n     * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.\n     */\n    Popup.prototype.getScrollableParent = function (element) {\n        this.checkFixedParent(element);\n        return getScrollableParent(element, this.fixedParent);\n    };\n    Popup.prototype.checkFixedParent = function (element) {\n        var parent = element.parentElement;\n        while (parent && parent.tagName !== 'HTML') {\n            var parentStyle = getComputedStyle(parent);\n            if (parentStyle.position === 'fixed' && this.element.offsetParent && this.element.offsetParent.tagName === 'BODY') {\n                this.element.style.position = 'fixed';\n                this.fixedParent = true;\n            }\n            parent = parent.parentElement;\n            if (isNullOrUndefined(this.element.offsetParent) && parentStyle.position === 'fixed'\n                && this.element.style.position === 'fixed') {\n                this.fixedParent = true;\n            }\n        }\n    };\n    __decorate([\n        Property('auto')\n    ], Popup.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Popup.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Popup.prototype, \"content\", void 0);\n    __decorate([\n        Property('container')\n    ], Popup.prototype, \"targetType\", void 0);\n    __decorate([\n        Property(null)\n    ], Popup.prototype, \"viewPortElement\", void 0);\n    __decorate([\n        Property({ X: 'none', Y: 'none' })\n    ], Popup.prototype, \"collision\", void 0);\n    __decorate([\n        Property('')\n    ], Popup.prototype, \"relateTo\", void 0);\n    __decorate([\n        Complex({}, PositionData)\n    ], Popup.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Popup.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Popup.prototype, \"offsetY\", void 0);\n    __decorate([\n        Property(1000)\n    ], Popup.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Popup.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property('reposition')\n    ], Popup.prototype, \"actionOnScroll\", void 0);\n    __decorate([\n        Property(null)\n    ], Popup.prototype, \"showAnimation\", void 0);\n    __decorate([\n        Property(null)\n    ], Popup.prototype, \"hideAnimation\", void 0);\n    __decorate([\n        Event()\n    ], Popup.prototype, \"open\", void 0);\n    __decorate([\n        Event()\n    ], Popup.prototype, \"close\", void 0);\n    __decorate([\n        Event()\n    ], Popup.prototype, \"targetExitViewport\", void 0);\n    Popup = __decorate([\n        NotifyPropertyChanges\n    ], Popup);\n    return Popup;\n}(Component));\nexport { Popup };\n/**\n * Gets scrollable parent elements for the given element.\n * @param { HTMLElement } element - Specify the element to get the scrollable parents of it.\n * @private\n */\nexport function getScrollableParent(element, fixedParent) {\n    var eleStyle = getComputedStyle(element);\n    var scrollParents = [];\n    var overflowRegex = /(auto|scroll)/;\n    var parent = element.parentElement;\n    while (parent && parent.tagName !== 'HTML') {\n        var parentStyle = getComputedStyle(parent);\n        if (!(eleStyle.position === 'absolute' && parentStyle.position === 'static')\n            && overflowRegex.test(parentStyle.overflow + parentStyle.overflowY + parentStyle.overflowX)) {\n            scrollParents.push(parent);\n        }\n        parent = parent.parentElement;\n    }\n    if (!fixedParent) {\n        scrollParents.push(document);\n    }\n    return scrollParents;\n}\n/**\n * Gets the maximum z-index of the given element.\n * @param { HTMLElement } element - Specify the element to get the maximum z-index of it.\n * @private\n */\nexport function getZindexPartial(element) {\n    // upto body traversal\n    var parent = element.parentElement;\n    var parentZindex = [];\n    while (parent) {\n        if (parent.tagName !== 'BODY') {\n            var index = document.defaultView.getComputedStyle(parent, null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(parent, null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                parentZindex.push(index);\n            }\n            parent = parent.parentElement;\n        }\n        else {\n            break;\n        }\n    }\n    //Body direct children element traversal\n    var childrenZindex = [];\n    for (var i = 0; i < document.body.children.length; i++) {\n        if (!element.isEqualNode(document.body.children[i])) {\n            var index = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(document.body.children[i], null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                childrenZindex.push(index);\n            }\n        }\n    }\n    childrenZindex.push('999');\n    var siblingsZindex = [];\n    if (!isNullOrUndefined(element.parentElement) && element.parentElement.tagName !== 'BODY') {\n        var childNodes = [].slice.call(element.parentElement.children);\n        for (var i = 0; i < childNodes.length; i++) {\n            var index = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(childNodes[i], null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                siblingsZindex.push(index);\n            }\n        }\n    }\n    var finalValue = parentZindex.concat(childrenZindex, siblingsZindex);\n    var currentZindexValue = Math.max.apply(Math, finalValue) + 1;\n    // Checking the max-zindex value\n    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;\n}\n/**\n * Gets the maximum z-index of the page.\n * @param { HTMLElement } tagName - Specify the tagName to get the maximum z-index of it.\n * @private\n */\nexport function getMaxZindex(tagName) {\n    if (tagName === void 0) { tagName = ['*']; }\n    var maxZindex = [];\n    for (var i = 0; i < tagName.length; i++) {\n        var elements = document.getElementsByTagName(tagName[i]);\n        for (var i_1 = 0; i_1 < elements.length; i_1++) {\n            var index = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('z-index');\n            var position = document.defaultView.getComputedStyle(elements[i_1], null).getPropertyValue('position');\n            if (index !== 'auto' && position !== 'static') {\n                maxZindex.push(index);\n            }\n        }\n    }\n    var currentZindexValue = Math.max.apply(Math, maxZindex) + 1;\n    return currentZindexValue > 2147483647 ? 2147483647 : currentZindexValue;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, ChildProperty, Event, append, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { EventHandler, Touch, Browser, Animation as PopupAnimation } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, getUniqueID, formatUnit } from '@syncfusion/ej2-base';\nimport { attributes, closest, removeClass, addClass, remove, updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, Complex } from '@syncfusion/ej2-base';\nimport { Popup } from '../popup/popup';\nimport { calculatePosition } from '../common/position';\nimport { isCollide, fit } from '../common/collision';\nvar TOUCHEND_HIDE_DELAY = 1500;\nvar TAPHOLD_THRESHOLD = 500;\nvar SHOW_POINTER_TIP_GAP = 0;\nvar HIDE_POINTER_TIP_GAP = 8;\nvar MOUSE_TRAIL_GAP = 2;\nvar POINTER_ADJUST = 2;\nvar ROOT = 'e-tooltip';\nvar RTL = 'e-rtl';\nvar DEVICE = 'e-bigger';\nvar ICON = 'e-icons';\nvar CLOSE = 'e-tooltip-close';\nvar TOOLTIP_WRAP = 'e-tooltip-wrap';\nvar CONTENT = 'e-tip-content';\nvar ARROW_TIP = 'e-arrow-tip';\nvar ARROW_TIP_OUTER = 'e-arrow-tip-outer';\nvar ARROW_TIP_INNER = 'e-arrow-tip-inner';\nvar TIP_BOTTOM = 'e-tip-bottom';\nvar TIP_TOP = 'e-tip-top';\nvar TIP_LEFT = 'e-tip-left';\nvar TIP_RIGHT = 'e-tip-right';\nvar POPUP_ROOT = 'e-popup';\nvar POPUP_OPEN = 'e-popup-open';\nvar POPUP_CLOSE = 'e-popup-close';\nvar POPUP_LIB = 'e-lib';\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property({ effect: 'FadeIn', duration: 150, delay: 0 })\n    ], Animation.prototype, \"open\", void 0);\n    __decorate([\n        Property({ effect: 'FadeOut', duration: 150, delay: 0 })\n    ], Animation.prototype, \"close\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Represents the Tooltip component that displays a piece of information about the target element on mouse hover.\n * ```html\n * <div id=\"tooltip\">Show Tooltip</div>\n * ```\n * ```typescript\n * <script>\n *   var tooltipObj = new Tooltip({ content: 'Tooltip text' });\n *   tooltipObj.appendTo(\"#tooltip\");\n * </script>\n * ```\n */\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    /**\n     * Constructor for creating the Tooltip Component\n     */\n    function Tooltip(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    Tooltip.prototype.initialize = function () {\n        this.formatPosition();\n        addClass([this.element], ROOT);\n    };\n    Tooltip.prototype.formatPosition = function () {\n        var _a, _b;\n        if (this.position.indexOf('Top') === 0 || this.position.indexOf('Bottom') === 0) {\n            _a = this.position.split(/(?=[A-Z])/), this.tooltipPositionY = _a[0], this.tooltipPositionX = _a[1];\n        }\n        else {\n            _b = this.position.split(/(?=[A-Z])/), this.tooltipPositionX = _b[0], this.tooltipPositionY = _b[1];\n        }\n    };\n    Tooltip.prototype.renderArrow = function () {\n        this.setTipClass(this.position);\n        var tip = this.createElement('div', { className: ARROW_TIP + ' ' + this.tipClass });\n        tip.appendChild(this.createElement('div', { className: ARROW_TIP_OUTER + ' ' + this.tipClass }));\n        tip.appendChild(this.createElement('div', { className: ARROW_TIP_INNER + ' ' + this.tipClass }));\n        this.tooltipEle.appendChild(tip);\n    };\n    Tooltip.prototype.setTipClass = function (position) {\n        if (position.indexOf('Right') === 0) {\n            this.tipClass = TIP_LEFT;\n        }\n        else if (position.indexOf('Bottom') === 0) {\n            this.tipClass = TIP_TOP;\n        }\n        else if (position.indexOf('Left') === 0) {\n            this.tipClass = TIP_RIGHT;\n        }\n        else {\n            this.tipClass = TIP_BOTTOM;\n        }\n    };\n    Tooltip.prototype.renderPopup = function (target) {\n        var elePos = this.mouseTrail ? { top: 0, left: 0 } : this.getTooltipPosition(target);\n        this.tooltipEle.classList.remove(POPUP_LIB);\n        this.popupObj = new Popup(this.tooltipEle, {\n            height: this.height,\n            width: this.width,\n            position: {\n                X: elePos.left,\n                Y: elePos.top\n            },\n            enableRtl: this.enableRtl,\n            open: this.openPopupHandler.bind(this),\n            close: this.closePopupHandler.bind(this)\n        });\n    };\n    Tooltip.prototype.getTooltipPosition = function (target) {\n        this.tooltipEle.style.display = 'none';\n        var pos = calculatePosition(target, this.tooltipPositionX, this.tooltipPositionY);\n        this.tooltipEle.style.display = '';\n        var offsetPos = this.calculateTooltipOffset(this.position);\n        var elePos = this.collisionFlipFit(target, pos.left + offsetPos.left, pos.top + offsetPos.top);\n        return elePos;\n    };\n    Tooltip.prototype.reposition = function (target) {\n        var elePos = this.getTooltipPosition(target);\n        this.popupObj.position = { X: elePos.left, Y: elePos.top };\n        this.popupObj.dataBind();\n    };\n    Tooltip.prototype.openPopupHandler = function () {\n        if (this.needTemplateReposition() && !this.mouseTrail) {\n            this.reposition(this.findTarget());\n        }\n        this.trigger('afterOpen', this.tooltipEventArgs);\n    };\n    Tooltip.prototype.closePopupHandler = function () {\n        resetBlazorTemplate(this.element.id + 'content', 'Content');\n        this.clear();\n        this.trigger('afterClose', this.tooltipEventArgs);\n    };\n    Tooltip.prototype.calculateTooltipOffset = function (position) {\n        var pos = { top: 0, left: 0 };\n        var tooltipEleWidth = this.tooltipEle.offsetWidth;\n        var tooltipEleHeight = this.tooltipEle.offsetHeight;\n        var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);\n        var tipWidth = arrowEle ? arrowEle.offsetWidth : 0;\n        var tipHeight = arrowEle ? arrowEle.offsetHeight : 0;\n        var tipAdjust = (this.showTipPointer ? SHOW_POINTER_TIP_GAP : HIDE_POINTER_TIP_GAP);\n        var tipHeightAdjust = (tipHeight / 2) + POINTER_ADJUST + (this.tooltipEle.offsetHeight - this.tooltipEle.clientHeight);\n        var tipWidthAdjust = (tipWidth / 2) + POINTER_ADJUST + (this.tooltipEle.offsetWidth - this.tooltipEle.clientWidth);\n        if (this.mouseTrail) {\n            tipAdjust += MOUSE_TRAIL_GAP;\n        }\n        switch (position) {\n            case 'RightTop':\n                pos.left += tipWidth + tipAdjust;\n                pos.top -= tooltipEleHeight - tipHeightAdjust;\n                break;\n            case 'RightCenter':\n                pos.left += tipWidth + tipAdjust;\n                pos.top -= (tooltipEleHeight / 2);\n                break;\n            case 'RightBottom':\n                pos.left += tipWidth + tipAdjust;\n                pos.top -= (tipHeightAdjust);\n                break;\n            case 'BottomRight':\n                pos.top += (tipHeight + tipAdjust);\n                pos.left -= (tipWidthAdjust);\n                break;\n            case 'BottomCenter':\n                pos.top += (tipHeight + tipAdjust);\n                pos.left -= (tooltipEleWidth / 2);\n                break;\n            case 'BottomLeft':\n                pos.top += (tipHeight + tipAdjust);\n                pos.left -= (tooltipEleWidth - tipWidthAdjust);\n                break;\n            case 'LeftBottom':\n                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);\n                pos.top -= (tipHeightAdjust);\n                break;\n            case 'LeftCenter':\n                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);\n                pos.top -= (tooltipEleHeight / 2);\n                break;\n            case 'LeftTop':\n                pos.left -= (tipWidth + tooltipEleWidth + tipAdjust);\n                pos.top -= (tooltipEleHeight - tipHeightAdjust);\n                break;\n            case 'TopLeft':\n                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);\n                pos.left -= (tooltipEleWidth - tipWidthAdjust);\n                break;\n            case 'TopRight':\n                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);\n                pos.left -= (tipWidthAdjust);\n                break;\n            default:\n                pos.top -= (tooltipEleHeight + tipHeight + tipAdjust);\n                pos.left -= (tooltipEleWidth / 2);\n                break;\n        }\n        pos.left += this.offsetX;\n        pos.top += this.offsetY;\n        return pos;\n    };\n    Tooltip.prototype.updateTipPosition = function (position) {\n        var selEle = this.tooltipEle.querySelectorAll('.' + ARROW_TIP + ',.' + ARROW_TIP_OUTER + ',.' + ARROW_TIP_INNER);\n        var removeList = [TIP_BOTTOM, TIP_TOP, TIP_LEFT, TIP_RIGHT];\n        removeClass(selEle, removeList);\n        this.setTipClass(position);\n        addClass(selEle, this.tipClass);\n    };\n    Tooltip.prototype.adjustArrow = function (target, position, tooltipPositionX, tooltipPositionY) {\n        if (this.showTipPointer === false) {\n            return;\n        }\n        this.updateTipPosition(position);\n        var leftValue;\n        var topValue;\n        var tooltipWidth = this.tooltipEle.clientWidth;\n        var tooltipHeight = this.tooltipEle.clientHeight;\n        var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);\n        var arrowInnerELe = this.tooltipEle.querySelector('.' + ARROW_TIP_INNER);\n        var tipWidth = arrowEle.offsetWidth;\n        var tipHeight = arrowEle.offsetHeight;\n        if (this.tipClass === TIP_BOTTOM || this.tipClass === TIP_TOP) {\n            if (this.tipClass === TIP_BOTTOM) {\n                topValue = '99.9%';\n                // Arrow icon aligned -2px height from ArrowOuterTip div\n                arrowInnerELe.style.top = '-' + (tipHeight - 2) + 'px';\n            }\n            else {\n                topValue = -(tipHeight - 1) + 'px';\n                // Arrow icon aligned -6px height from ArrowOuterTip div\n                arrowInnerELe.style.top = '-' + (tipHeight - 6) + 'px';\n            }\n            var tipPosExclude = tooltipPositionX !== 'Center' || (tooltipWidth > target.offsetWidth) || this.mouseTrail;\n            if ((tipPosExclude && tooltipPositionX === 'Left') || (!tipPosExclude && this.tipPointerPosition === 'End')) {\n                leftValue = (tooltipWidth - tipWidth - POINTER_ADJUST) + 'px';\n            }\n            else if ((tipPosExclude && tooltipPositionX === 'Right') || (!tipPosExclude && this.tipPointerPosition === 'Start')) {\n                leftValue = POINTER_ADJUST + 'px';\n            }\n            else {\n                leftValue = ((tooltipWidth / 2) - (tipWidth / 2)) + 'px';\n            }\n        }\n        else {\n            if (this.tipClass === TIP_RIGHT) {\n                leftValue = '99.9%';\n                // Arrow icon aligned -2px left from ArrowOuterTip div\n                arrowInnerELe.style.left = '-' + (tipWidth - 2) + 'px';\n            }\n            else {\n                leftValue = -(tipWidth - 1) + 'px';\n                // Arrow icon aligned -2px from ArrowOuterTip width\n                arrowInnerELe.style.left = (-(tipWidth) + (tipWidth - 2)) + 'px';\n            }\n            var tipPosExclude = tooltipPositionY !== 'Center' || (tooltipHeight > target.offsetHeight) || this.mouseTrail;\n            if ((tipPosExclude && tooltipPositionY === 'Top') || (!tipPosExclude && this.tipPointerPosition === 'End')) {\n                topValue = (tooltipHeight - tipHeight - POINTER_ADJUST) + 'px';\n            }\n            else if ((tipPosExclude && tooltipPositionY === 'Bottom') || (!tipPosExclude && this.tipPointerPosition === 'Start')) {\n                topValue = POINTER_ADJUST + 'px';\n            }\n            else {\n                topValue = ((tooltipHeight / 2) - (tipHeight / 2)) + 'px';\n            }\n        }\n        arrowEle.style.top = topValue;\n        arrowEle.style.left = leftValue;\n    };\n    Tooltip.prototype.renderContent = function (target) {\n        var tooltipContent = this.tooltipEle.querySelector('.' + CONTENT);\n        if (target && !isNullOrUndefined(target.getAttribute('title'))) {\n            target.setAttribute('data-content', target.getAttribute('title'));\n            target.removeAttribute('title');\n        }\n        if (!isNullOrUndefined(this.content)) {\n            tooltipContent.innerHTML = '';\n            if (this.content instanceof HTMLElement) {\n                tooltipContent.appendChild(this.content);\n            }\n            else if (typeof this.content === 'string' && this.content.indexOf('<div>Blazor') < 0) {\n                tooltipContent.innerHTML = this.content;\n            }\n            else {\n                var templateFunction = compile(this.content);\n                append(templateFunction({}, null, null, this.element.id + 'content'), tooltipContent);\n                if (typeof this.content === 'string' && this.content.indexOf('<div>Blazor') >= 0) {\n                    this.isBlazorTemplate = true;\n                    updateBlazorTemplate(this.element.id + 'content', 'Content', this);\n                }\n            }\n        }\n        else {\n            if (target && !isNullOrUndefined(target.getAttribute('data-content'))) {\n                tooltipContent.innerHTML = target.getAttribute('data-content');\n            }\n        }\n    };\n    Tooltip.prototype.renderCloseIcon = function () {\n        if (!this.isSticky) {\n            return;\n        }\n        var tipClose = this.createElement('div', { className: ICON + ' ' + CLOSE });\n        this.tooltipEle.appendChild(tipClose);\n        EventHandler.add(tipClose, Browser.touchStartEvent, this.onStickyClose, this);\n    };\n    Tooltip.prototype.addDescribedBy = function (target, id) {\n        var describedby = (target.getAttribute('aria-describedby') || '').split(/\\s+/);\n        if (describedby.indexOf(id) < 0) {\n            describedby.push(id);\n        }\n        attributes(target, { 'aria-describedby': describedby.join(' ').trim(), 'data-tooltip-id': id });\n    };\n    Tooltip.prototype.removeDescribedBy = function (target) {\n        var id = target.getAttribute('data-tooltip-id');\n        var describedby = (target.getAttribute('aria-describedby') || '').split(/\\s+/);\n        var index = describedby.indexOf(id);\n        if (index !== -1) {\n            describedby.splice(index, 1);\n        }\n        target.removeAttribute('data-tooltip-id');\n        var orgdescribedby = describedby.join(' ').trim();\n        if (orgdescribedby) {\n            target.setAttribute('aria-describedby', orgdescribedby);\n        }\n        else {\n            target.removeAttribute('aria-describedby');\n        }\n    };\n    Tooltip.prototype.tapHoldHandler = function (evt) {\n        clearTimeout(this.autoCloseTimer);\n        this.targetHover(evt.originalEvent);\n    };\n    Tooltip.prototype.touchEndHandler = function (e) {\n        var _this = this;\n        if (this.isSticky) {\n            return;\n        }\n        var close = function () {\n            _this.close();\n        };\n        this.autoCloseTimer = setTimeout(close, TOUCHEND_HIDE_DELAY);\n    };\n    Tooltip.prototype.targetClick = function (e) {\n        var target;\n        if (this.target) {\n            target = closest(e.target, this.target);\n        }\n        else {\n            target = this.element;\n        }\n        if (isNullOrUndefined(target)) {\n            return;\n        }\n        if (target.getAttribute('data-tooltip-id') === null) {\n            this.targetHover(e);\n        }\n        else if (!this.isSticky) {\n            this.hideTooltip(this.animation.close, e, target);\n        }\n    };\n    Tooltip.prototype.targetHover = function (e) {\n        var target;\n        if (this.target) {\n            target = closest(e.target, this.target);\n        }\n        else {\n            target = this.element;\n        }\n        if (isNullOrUndefined(target) || target.getAttribute('data-tooltip-id') !== null) {\n            return;\n        }\n        var targetList = [].slice.call(document.querySelectorAll('[data-tooltip-id= ' + this.ctrlId + '_content]'));\n        for (var _i = 0, targetList_1 = targetList; _i < targetList_1.length; _i++) {\n            var target_1 = targetList_1[_i];\n            this.restoreElement(target_1);\n        }\n        this.showTooltip(target, this.animation.open, e);\n    };\n    Tooltip.prototype.showTooltip = function (target, showAnimation, e) {\n        var _this = this;\n        clearTimeout(this.showTimer);\n        clearTimeout(this.hideTimer);\n        this.tooltipEventArgs = e\n            ? { type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle }\n            : { type: null, cancel: false, target: target, event: null, element: this.tooltipEle };\n        var observeCallback = function (beforeRenderArgs) {\n            _this.beforeRenderCallback(beforeRenderArgs, target, e, showAnimation);\n        };\n        this.trigger('beforeRender', this.tooltipEventArgs, observeCallback.bind(this));\n    };\n    Tooltip.prototype.beforeRenderCallback = function (beforeRenderArgs, target, e, showAnimation) {\n        var _this = this;\n        if (beforeRenderArgs.cancel) {\n            this.isHidden = true;\n            this.clear();\n        }\n        else {\n            this.isHidden = false;\n            if (isNullOrUndefined(this.tooltipEle)) {\n                this.ctrlId = this.element.getAttribute('id') ?\n                    getUniqueID(this.element.getAttribute('id')) : getUniqueID('tooltip');\n                this.tooltipEle = this.createElement('div', {\n                    className: TOOLTIP_WRAP + ' ' + POPUP_ROOT + ' ' + POPUP_LIB, attrs: {\n                        role: 'tooltip', 'aria-hidden': 'false', 'id': this.ctrlId + '_content'\n                    }, styles: 'width:' +\n                        formatUnit(this.width) + ';height:' + formatUnit(this.height) + ';position:absolute;'\n                });\n                if (this.cssClass) {\n                    addClass([this.tooltipEle], this.cssClass.split(' '));\n                }\n                if (Browser.isDevice) {\n                    addClass([this.tooltipEle], DEVICE);\n                }\n                if (this.width !== 'auto') {\n                    this.tooltipEle.style.maxWidth = formatUnit(this.width);\n                }\n                this.tooltipEle.appendChild(this.createElement('div', { className: CONTENT }));\n                document.body.appendChild(this.tooltipEle);\n                this.addDescribedBy(target, this.ctrlId + '_content');\n                this.renderContent(target);\n                addClass([this.tooltipEle], POPUP_OPEN);\n                if (this.showTipPointer) {\n                    this.renderArrow();\n                }\n                this.renderCloseIcon();\n                this.renderPopup(target);\n            }\n            else {\n                this.adjustArrow(target, this.position, this.tooltipPositionX, this.tooltipPositionY);\n                this.addDescribedBy(target, this.ctrlId + '_content');\n                this.renderContent(target);\n                PopupAnimation.stop(this.tooltipEle);\n                this.reposition(target);\n            }\n            removeClass([this.tooltipEle], POPUP_OPEN);\n            addClass([this.tooltipEle], POPUP_CLOSE);\n            this.tooltipEventArgs = e ? { type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle } :\n                { type: null, cancel: false, target: target, event: null, element: this.tooltipEle };\n            if (this.needTemplateReposition() && !this.mouseTrail) {\n                this.tooltipEle.style.display = 'none';\n            }\n            var observeCallback = function (observedArgs) {\n                _this.beforeOpenCallback(observedArgs, target, showAnimation, e);\n            };\n            this.trigger('beforeOpen', this.tooltipEventArgs, observeCallback.bind(this));\n        }\n    };\n    Tooltip.prototype.beforeOpenCallback = function (observedArgs, target, showAnimation, e) {\n        var _this = this;\n        if (observedArgs.cancel) {\n            this.isHidden = true;\n            this.clear();\n            this.restoreElement(target);\n        }\n        else {\n            var openAnimation_1 = {\n                name: showAnimation.effect,\n                duration: showAnimation.duration,\n                delay: showAnimation.delay,\n                timingFunction: 'easeOut'\n            };\n            if (showAnimation.effect === 'None') {\n                openAnimation_1 = undefined;\n            }\n            if (this.openDelay > 0) {\n                var show = function () {\n                    if (_this.popupObj) {\n                        _this.popupObj.show(openAnimation_1, target);\n                    }\n                };\n                this.showTimer = setTimeout(show, this.openDelay);\n            }\n            else {\n                this.popupObj.show(openAnimation_1, target);\n            }\n        }\n        if (e) {\n            this.wireMouseEvents(e, target);\n        }\n    };\n    Tooltip.prototype.needTemplateReposition = function () {\n        // tslint:disable-next-line:no-any\n        var tooltip = this;\n        return !isNullOrUndefined(tooltip.viewContainerRef)\n            && typeof tooltip.viewContainerRef !== 'string'\n            || isBlazor() && this.isBlazorTemplate;\n    };\n    Tooltip.prototype.checkCollision = function (target, x, y) {\n        var elePos = {\n            left: x, top: y, position: this.position,\n            horizontal: this.tooltipPositionX, vertical: this.tooltipPositionY\n        };\n        var affectedPos = isCollide(this.tooltipEle, (this.target ? this.element : null), x, y);\n        if (affectedPos.length > 0) {\n            elePos.horizontal = affectedPos.indexOf('left') >= 0 ? 'Right' : affectedPos.indexOf('right') >= 0 ? 'Left' :\n                this.tooltipPositionX;\n            elePos.vertical = affectedPos.indexOf('top') >= 0 ? 'Bottom' : affectedPos.indexOf('bottom') >= 0 ? 'Top' :\n                this.tooltipPositionY;\n        }\n        return elePos;\n    };\n    Tooltip.prototype.collisionFlipFit = function (target, x, y) {\n        var elePos = this.checkCollision(target, x, y);\n        var newpos = elePos.position;\n        if (this.tooltipPositionY !== elePos.vertical) {\n            newpos = ((this.position.indexOf('Bottom') === 0 || this.position.indexOf('Top') === 0) ?\n                elePos.vertical + this.tooltipPositionX : this.tooltipPositionX + elePos.vertical);\n        }\n        if (this.tooltipPositionX !== elePos.horizontal) {\n            if (newpos.indexOf('Left') === 0) {\n                elePos.vertical = (newpos === 'LeftTop' || newpos === 'LeftCenter') ? 'Top' : 'Bottom';\n                newpos = (elePos.vertical + 'Left');\n            }\n            if (newpos.indexOf('Right') === 0) {\n                elePos.vertical = (newpos === 'RightTop' || newpos === 'RightCenter') ? 'Top' : 'Bottom';\n                newpos = (elePos.vertical + 'Right');\n            }\n            elePos.horizontal = this.tooltipPositionX;\n        }\n        this.tooltipEventArgs = {\n            type: null, cancel: false, target: target, event: null,\n            element: this.tooltipEle, collidedPosition: newpos\n        };\n        this.trigger('beforeCollision', this.tooltipEventArgs);\n        if (elePos.position !== newpos) {\n            var pos = calculatePosition(target, elePos.horizontal, elePos.vertical);\n            this.adjustArrow(target, newpos, elePos.horizontal, elePos.vertical);\n            var offsetPos = this.calculateTooltipOffset(newpos);\n            offsetPos.top -= (('TopBottom'.indexOf(this.position.split(/(?=[A-Z])/)[0]) !== -1) &&\n                ('TopBottom'.indexOf(newpos.split(/(?=[A-Z])/)[0]) !== -1)) ? (2 * this.offsetY) : 0;\n            offsetPos.left -= (('RightLeft'.indexOf(this.position.split(/(?=[A-Z])/)[0]) !== -1) &&\n                ('RightLeft'.indexOf(newpos.split(/(?=[A-Z])/)[0]) !== -1)) ? (2 * this.offsetX) : 0;\n            elePos.position = newpos;\n            elePos.left = pos.left + offsetPos.left;\n            elePos.top = pos.top + offsetPos.top;\n        }\n        else {\n            this.adjustArrow(target, newpos, elePos.horizontal, elePos.vertical);\n        }\n        var eleOffset = { left: elePos.left, top: elePos.top };\n        var left = fit(this.tooltipEle, (this.target ? this.element : null), { X: true, Y: false }, eleOffset).left;\n        if (this.showTipPointer && (newpos.indexOf('Bottom') === 0 || newpos.indexOf('Top') === 0)) {\n            var arrowEle = this.tooltipEle.querySelector('.' + ARROW_TIP);\n            var arrowleft = parseInt(arrowEle.style.left, 10) - (left - elePos.left);\n            if (arrowleft < 0) {\n                arrowleft = 0;\n            }\n            else if ((arrowleft + arrowEle.offsetWidth) > this.tooltipEle.clientWidth) {\n                arrowleft = this.tooltipEle.clientWidth - arrowEle.offsetWidth;\n            }\n            arrowEle.style.left = arrowleft.toString() + 'px';\n        }\n        eleOffset.left = left;\n        return eleOffset;\n    };\n    Tooltip.prototype.hideTooltip = function (hideAnimation, e, targetElement) {\n        var _this = this;\n        var target;\n        if (e) {\n            target = this.target ? (targetElement || e.target) : this.element;\n            this.tooltipEventArgs = {\n                type: e.type, cancel: false, target: target, event: e, element: this.tooltipEle\n            };\n        }\n        else {\n            target = document.querySelector('[data-tooltip-id= ' + this.ctrlId + '_content]');\n            this.tooltipEventArgs = {\n                type: null, cancel: false, target: target, event: null, element: this.tooltipEle\n            };\n        }\n        if (isNullOrUndefined(target)) {\n            return;\n        }\n        this.trigger('beforeClose', this.tooltipEventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.restoreElement(target);\n                _this.isHidden = true;\n                var closeAnimation_1 = {\n                    name: hideAnimation.effect,\n                    duration: hideAnimation.duration,\n                    delay: hideAnimation.delay,\n                    timingFunction: 'easeIn'\n                };\n                if (hideAnimation.effect === 'None') {\n                    closeAnimation_1 = undefined;\n                }\n                if (_this.closeDelay > 0) {\n                    var hide = function () {\n                        if (_this.popupObj) {\n                            _this.popupObj.hide(closeAnimation_1);\n                        }\n                    };\n                    _this.hideTimer = setTimeout(hide, _this.closeDelay);\n                }\n                else {\n                    _this.popupObj.hide(closeAnimation_1);\n                }\n            }\n            else {\n                _this.isHidden = false;\n            }\n        });\n    };\n    Tooltip.prototype.restoreElement = function (target) {\n        this.unwireMouseEvents(target);\n        if (!isNullOrUndefined(target.getAttribute('data-content'))) {\n            target.setAttribute('title', target.getAttribute('data-content'));\n            target.removeAttribute('data-content');\n        }\n        this.removeDescribedBy(target);\n    };\n    Tooltip.prototype.clear = function () {\n        if (this.tooltipEle) {\n            removeClass([this.tooltipEle], POPUP_CLOSE);\n            addClass([this.tooltipEle], POPUP_OPEN);\n        }\n        if (this.isHidden) {\n            if (this.popupObj) {\n                this.popupObj.destroy();\n            }\n            if (this.tooltipEle) {\n                remove(this.tooltipEle);\n            }\n            this.tooltipEle = null;\n            this.popupObj = null;\n        }\n    };\n    Tooltip.prototype.onMouseOut = function (e) {\n        var enteredElement = e.relatedTarget;\n        // don't close the tooltip only if it is tooltip content element\n        if (enteredElement && !this.mouseTrail) {\n            var checkForTooltipElement = closest(enteredElement, \".\" + TOOLTIP_WRAP + \".\" + POPUP_LIB + \".\" + POPUP_ROOT);\n            if (checkForTooltipElement) {\n                EventHandler.add(checkForTooltipElement, 'mouseleave', this.tooltipElementMouseOut, this);\n                this.unwireMouseEvents(e.target);\n            }\n            else {\n                this.hideTooltip(this.animation.close, e);\n            }\n        }\n        else {\n            this.hideTooltip(this.animation.close, e);\n        }\n    };\n    Tooltip.prototype.tooltipElementMouseOut = function (e) {\n        this.hideTooltip(this.animation.close, e, this.findTarget());\n        EventHandler.remove(this.element, 'mouseleave', this.tooltipElementMouseOut);\n    };\n    Tooltip.prototype.onStickyClose = function (e) {\n        this.close();\n    };\n    Tooltip.prototype.onMouseMove = function (event) {\n        var eventPageX = 0;\n        var eventPageY = 0;\n        if (event.type.indexOf('touch') > -1) {\n            event.preventDefault();\n            eventPageX = event.touches[0].pageX;\n            eventPageY = event.touches[0].pageY;\n        }\n        else {\n            eventPageX = event.pageX;\n            eventPageY = event.pageY;\n        }\n        PopupAnimation.stop(this.tooltipEle);\n        removeClass([this.tooltipEle], POPUP_CLOSE);\n        addClass([this.tooltipEle], POPUP_OPEN);\n        this.adjustArrow(event.target, this.position, this.tooltipPositionX, this.tooltipPositionY);\n        var pos = this.calculateTooltipOffset(this.position);\n        var x = eventPageX + pos.left + this.offsetX;\n        var y = eventPageY + pos.top + this.offsetY;\n        var elePos = this.checkCollision(event.target, x, y);\n        if (this.tooltipPositionX !== elePos.horizontal || this.tooltipPositionY !== elePos.vertical) {\n            var newpos = (this.position.indexOf('Bottom') === 0 || this.position.indexOf('Top') === 0) ?\n                elePos.vertical + elePos.horizontal : elePos.horizontal + elePos.vertical;\n            elePos.position = newpos;\n            this.adjustArrow(event.target, elePos.position, elePos.horizontal, elePos.vertical);\n            var colpos = this.calculateTooltipOffset(elePos.position);\n            elePos.left = eventPageX + colpos.left - this.offsetX;\n            elePos.top = eventPageY + colpos.top - this.offsetY;\n        }\n        this.tooltipEle.style.left = elePos.left + 'px';\n        this.tooltipEle.style.top = elePos.top + 'px';\n    };\n    Tooltip.prototype.keyDown = function (event) {\n        if (this.tooltipEle && event.keyCode === 27) {\n            this.close();\n        }\n    };\n    Tooltip.prototype.touchEnd = function (e) {\n        if (this.tooltipEle && closest(e.target, '.' + ROOT) === null) {\n            this.close();\n        }\n    };\n    Tooltip.prototype.scrollHandler = function (e) {\n        if (this.tooltipEle) {\n            this.close();\n        }\n    };\n    /**\n     * Core method that initializes the control rendering.\n     * @private\n     */\n    Tooltip.prototype.render = function () {\n        this.initialize();\n        this.wireEvents(this.opensOn);\n        this.renderComplete();\n    };\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Tooltip.prototype.preRender = function () {\n        this.tipClass = TIP_BOTTOM;\n        this.tooltipPositionX = 'Center';\n        this.tooltipPositionY = 'Top';\n        this.isHidden = true;\n    };\n    /**\n     * Binding events to the Tooltip element.\n     * @hidden\n     */\n    Tooltip.prototype.wireEvents = function (trigger) {\n        var triggerList = this.getTriggerList(trigger);\n        for (var _i = 0, triggerList_1 = triggerList; _i < triggerList_1.length; _i++) {\n            var opensOn = triggerList_1[_i];\n            if (opensOn === 'Custom') {\n                return;\n            }\n            if (opensOn === 'Focus') {\n                this.wireFocusEvents();\n            }\n            if (opensOn === 'Click') {\n                EventHandler.add(this.element, Browser.touchStartEvent, this.targetClick, this);\n            }\n            if (opensOn === 'Hover') {\n                if (Browser.isDevice) {\n                    this.touchModule = new Touch(this.element, {\n                        tapHoldThreshold: TAPHOLD_THRESHOLD,\n                        tapHold: this.tapHoldHandler.bind(this)\n                    });\n                    EventHandler.add(this.element, Browser.touchEndEvent, this.touchEndHandler, this);\n                }\n                else {\n                    EventHandler.add(this.element, 'mouseover', this.targetHover, this);\n                }\n            }\n        }\n        EventHandler.add(document, 'touchend', this.touchEnd, this);\n        EventHandler.add(document, 'scroll', this.scrollHandler, this);\n        EventHandler.add(document, 'keydown', this.keyDown, this);\n    };\n    Tooltip.prototype.getTriggerList = function (trigger) {\n        if (trigger === 'Auto') {\n            trigger = (Browser.isDevice) ? 'Hover' : 'Hover Focus';\n        }\n        return trigger.split(' ');\n    };\n    Tooltip.prototype.wireFocusEvents = function () {\n        if (!isNullOrUndefined(this.target)) {\n            var targetList = [].slice.call(this.element.querySelectorAll(this.target));\n            for (var _i = 0, targetList_2 = targetList; _i < targetList_2.length; _i++) {\n                var target = targetList_2[_i];\n                EventHandler.add(target, 'focus', this.targetHover, this);\n            }\n        }\n        else {\n            EventHandler.add(this.element, 'focus', this.targetHover, this);\n        }\n    };\n    Tooltip.prototype.wireMouseEvents = function (e, target) {\n        if (this.tooltipEle) {\n            if (!this.isSticky) {\n                if (e.type === 'focus') {\n                    EventHandler.add(target, 'blur', this.onMouseOut, this);\n                }\n                if (e.type === 'mouseover') {\n                    EventHandler.add(target, 'mouseleave', this.onMouseOut, this);\n                }\n            }\n            if (this.mouseTrail) {\n                EventHandler.add(target, 'mousemove touchstart mouseenter', this.onMouseMove, this);\n            }\n        }\n    };\n    /**\n     * Unbinding events from the element on widget destroy.\n     * @hidden\n     */\n    Tooltip.prototype.unwireEvents = function (trigger) {\n        var triggerList = this.getTriggerList(trigger);\n        for (var _i = 0, triggerList_2 = triggerList; _i < triggerList_2.length; _i++) {\n            var opensOn = triggerList_2[_i];\n            if (opensOn === 'Custom') {\n                return;\n            }\n            if (opensOn === 'Focus') {\n                this.unwireFocusEvents();\n            }\n            if (opensOn === 'Click') {\n                EventHandler.remove(this.element, Browser.touchStartEvent, this.targetClick);\n            }\n            if (opensOn === 'Hover') {\n                if (Browser.isDevice) {\n                    if (this.touchModule) {\n                        this.touchModule.destroy();\n                    }\n                    EventHandler.remove(this.element, Browser.touchEndEvent, this.touchEndHandler);\n                }\n                else {\n                    EventHandler.remove(this.element, 'mouseover', this.targetHover);\n                }\n            }\n        }\n        EventHandler.remove(document, 'touchend', this.touchEnd);\n        EventHandler.remove(document, 'scroll', this.scrollHandler);\n        EventHandler.remove(document, 'keydown', this.keyDown);\n    };\n    Tooltip.prototype.unwireFocusEvents = function () {\n        if (!isNullOrUndefined(this.target)) {\n            var targetList = [].slice.call(this.element.querySelectorAll(this.target));\n            for (var _i = 0, targetList_3 = targetList; _i < targetList_3.length; _i++) {\n                var target = targetList_3[_i];\n                EventHandler.remove(target, 'focus', this.targetHover);\n            }\n        }\n        else {\n            EventHandler.remove(this.element, 'focus', this.targetHover);\n        }\n    };\n    Tooltip.prototype.unwireMouseEvents = function (target) {\n        if (!this.isSticky) {\n            var triggerList = this.getTriggerList(this.opensOn);\n            for (var _i = 0, triggerList_3 = triggerList; _i < triggerList_3.length; _i++) {\n                var opensOn = triggerList_3[_i];\n                if (opensOn === 'Focus') {\n                    EventHandler.remove(target, 'blur', this.onMouseOut);\n                }\n                if (opensOn === 'Hover' && !Browser.isDevice) {\n                    EventHandler.remove(target, 'mouseleave', this.onMouseOut);\n                }\n            }\n        }\n        if (this.mouseTrail) {\n            EventHandler.remove(target, 'mousemove touchstart mouseenter', this.onMouseMove);\n        }\n    };\n    Tooltip.prototype.findTarget = function () {\n        var target = document.querySelector('[data-tooltip-id= ' + this.ctrlId + '_content]');\n        return target;\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'tooltip';\n    };\n    /**\n     * Returns the properties to be maintained in the persisted state.\n     * @private\n     */\n    Tooltip.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     * @private\n     */\n    Tooltip.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var targetElement = this.findTarget();\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    if (this.tooltipEle && targetElement) {\n                        this.tooltipEle.style.width = formatUnit(newProp.width);\n                        this.reposition(targetElement);\n                    }\n                    break;\n                case 'height':\n                    if (this.tooltipEle && targetElement) {\n                        this.tooltipEle.style.height = formatUnit(newProp.height);\n                        this.reposition(targetElement);\n                    }\n                    break;\n                case 'content':\n                    if (this.tooltipEle) {\n                        this.renderContent();\n                    }\n                    break;\n                case 'opensOn':\n                    this.unwireEvents(oldProp.opensOn);\n                    this.wireEvents(newProp.opensOn);\n                    break;\n                case 'position':\n                    this.formatPosition();\n                    if (this.tooltipEle && targetElement) {\n                        var arrowInnerELe = this.tooltipEle.querySelector('.' + ARROW_TIP_INNER);\n                        arrowInnerELe.style.top = arrowInnerELe.style.left = null;\n                        this.reposition(targetElement);\n                    }\n                    break;\n                case 'tipPointerPosition':\n                    if (this.tooltipEle && targetElement) {\n                        this.reposition(targetElement);\n                    }\n                    break;\n                case 'offsetX':\n                    if (this.tooltipEle) {\n                        var x = newProp.offsetX - oldProp.offsetX;\n                        this.tooltipEle.style.left = (parseInt(this.tooltipEle.style.left, 10) + (x)).toString() + 'px';\n                    }\n                    break;\n                case 'offsetY':\n                    if (this.tooltipEle) {\n                        var y = newProp.offsetY - oldProp.offsetY;\n                        this.tooltipEle.style.top = (parseInt(this.tooltipEle.style.top, 10) + (y)).toString() + 'px';\n                    }\n                    break;\n                case 'cssClass':\n                    if (this.tooltipEle) {\n                        if (oldProp.cssClass) {\n                            removeClass([this.tooltipEle], oldProp.cssClass.split(' '));\n                        }\n                        if (newProp.cssClass) {\n                            addClass([this.tooltipEle], newProp.cssClass.split(' '));\n                        }\n                    }\n                    break;\n                case 'enableRtl':\n                    if (this.tooltipEle) {\n                        if (this.enableRtl) {\n                            addClass([this.tooltipEle], RTL);\n                        }\n                        else {\n                            removeClass([this.tooltipEle], RTL);\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    /**\n     * It is used to show the Tooltip on the specified target with specific animation settings.\n     * @param element Target element where the Tooltip is to be displayed.\n     * @param animation Sets the specific animation, while showing the Tooltip on the screen.\n     * @return {void}\n     */\n    Tooltip.prototype.open = function (element, animation) {\n        if (animation === void 0) { animation = this.animation.open; }\n        if (element.style.display === 'none') {\n            return;\n        }\n        this.showTooltip(element, animation);\n    };\n    /**\n     * It is used to hide the Tooltip with specific animation effect.\n     * @param animation Sets the specific animation when hiding Tooltip from the screen.\n     * @return {void}\n     */\n    Tooltip.prototype.close = function (animation) {\n        if (animation === void 0) { animation = this.animation.close; }\n        this.hideTooltip(animation);\n    };\n    /**\n     * It is used to refresh the Tooltip content and its position.\n     * @param target Target element where the Tooltip content or position needs to be refreshed.\n     * @return {void}\n     */\n    Tooltip.prototype.refresh = function (target) {\n        if (this.tooltipEle) {\n            this.renderContent(target);\n        }\n        if (this.popupObj && target) {\n            this.reposition(target);\n        }\n    };\n    /**\n     * It is used to destroy the Tooltip component.\n     * @method destroy\n     * @return {void}\n     * @memberof Tooltip\n     */\n    Tooltip.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        removeClass([this.element], ROOT);\n        this.unwireEvents(this.opensOn);\n        this.unwireMouseEvents(this.element);\n        if (this.popupObj) {\n            this.popupObj.destroy();\n        }\n        if (this.tooltipEle) {\n            remove(this.tooltipEle);\n        }\n        this.tooltipEle = null;\n        this.popupObj = null;\n    };\n    __decorate([\n        Property('auto')\n    ], Tooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], Tooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Tooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property()\n    ], Tooltip.prototype, \"target\", void 0);\n    __decorate([\n        Property('TopCenter')\n    ], Tooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Tooltip.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Tooltip.prototype, \"offsetY\", void 0);\n    __decorate([\n        Property(true)\n    ], Tooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Tooltip.prototype, \"tipPointerPosition\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Tooltip.prototype, \"opensOn\", void 0);\n    __decorate([\n        Property(false)\n    ], Tooltip.prototype, \"mouseTrail\", void 0);\n    __decorate([\n        Property(false)\n    ], Tooltip.prototype, \"isSticky\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Tooltip.prototype, \"animation\", void 0);\n    __decorate([\n        Property(0)\n    ], Tooltip.prototype, \"openDelay\", void 0);\n    __decorate([\n        Property(0)\n    ], Tooltip.prototype, \"closeDelay\", void 0);\n    __decorate([\n        Property()\n    ], Tooltip.prototype, \"cssClass\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"beforeRender\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"beforeOpen\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"afterOpen\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"beforeClose\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"afterClose\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"beforeCollision\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Tooltip.prototype, \"destroyed\", void 0);\n    Tooltip = __decorate([\n        NotifyPropertyChanges\n    ], Tooltip);\n    return Tooltip;\n}(Component));\nexport { Tooltip };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n"],"sourceRoot":""}