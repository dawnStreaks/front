{"version":3,"sources":["webpack:///./node_modules/@syncfusion/ej2-data/src/query.js","webpack:///./node_modules/@syncfusion/ej2-data/src/adaptors.js","webpack:///./node_modules/@syncfusion/ej2-data/src/manager.js","webpack:///./node_modules/@syncfusion/ej2-data/src/util.js"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","result","preds","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","create","Adaptor","ds","options","requestType","count","aggregates","dataSource","pvt","processResponse","data","xhr","_super","JsonAdaptor","processQuery","countFlg","agg","undefined","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onWhere","obj","onAggregates","onSearch","getFieldList","onSortBy","fnCompare","getValue","sort","onGroup","aggQuery","tmp","onPage","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","callAdaptorFunction","getFiltersFrom","keys_3","keys","keys_1","prop","isNull","req","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","request1","param","selects","getResponseHeader","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","pKey","predicats","pData","aggregateData","level","groupQuery","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","val","getField","replacer","encodeURIComponent","isGuid","odBiOperator","odUniOperator","odv4UniOperator","onComplexPredicate","onEachWhere","join","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","split","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","parseInt","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","substring","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","ex","onDistinct","distinctFields","map","metaName","dataUrl","dataCount","WebApiAdaptor","_loop_1","x","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","urlParams","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","index","crossDomain","DataManager","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","isCors","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","lookup","buildHierarchy","makeRequest","deffered","Deferred","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","error","reject","process","actual","virtualSelectRecords","toString","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","send","catch","Promise","all","pResult","cResult","saveChanges","doAjaxRequest","deff_1","ajax_1","defer","bind","consts","GroupGuid","DataUtil","inst","input","substr","startsWith","fnAscending","fnDescending","y","localeCompare","extractFields","newObj","setValue","jsonArray","newData","jsonData","items","this_1","indx","childLevels","grouped","groupedArray","records","this_2","getVal","tempObj","aggs","source","grp","fKeyData","prefix","copyObj","nameSpace","fromObj","middle","left","right","merge","ignoreDiacritics","newValue","diacritics","current","shift","array","fnName","param1","param2","adp","rand","hexs","crypto","Uint8Array","getRandomValues","Math","random","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","serverTimezoneOffset","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","equal","expected","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","contains","notnull","isnull","startswith","endswith","processSymbols","jsonText","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","ms","offSet","toTimeZone","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","regex","match","jsonReplacer","arrayReplacer","getTimezoneOffset","toUTC","offset","utc","unix","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds"],"mappings":"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","file":"js/chunk-2f5a6bad.c762295e.js","sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        operator = operator || 'contains';\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = value[keyField];\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest]))) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            var deff_1 = new Deferred();\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            ajax_1.onSuccess = function (data, request) {\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_1.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_1.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            grouped[val].items.push(jsonData[i]);\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n"],"sourceRoot":""}